{"version":3,"sources":["progress-dialog.ts","text-field.ts","ripple.ts","snackbar.ts"],"names":["umd","ProgressDialog","addAnimationEndEvents","dialog","_this","this","animationEvents","forEach","eventName","addEventListener","onAnimationEnd","bind","event","currentTarget","removeEventListener","type","element","document","body","removeChild","parentNode","open","message","dialogContainer","createElement","innerHTML","querySelector","innerText","appendChild","close","classList","add","remove","RippleContainersSelector","join","Ripple","disabled","window","getComputedStyle","position","style","isTouching","e","createRipple","clientX","clientY","setTimeout","touches","prototype","rippleContainer","releaseEventName","releaseCallback","pageX","pageY","rippleWrapper","ripple","insertAdjacentElement","release","contains","requestAnimationFrame","clientRect","getBoundingClientRect","rippleSize","Math","max","clientWidth","clientHeight","width","height","marginLeft","marginTop","transitionDuration","pow","x","left","y","top","transformOrigin","initializeRipples","rippleContainers","querySelectorAll","i","length","SnackbarDuration","Snackbar","show","text","duration","buttonDefinition","long","snackbarQueue","push","consuming","consumeQueue","showNext","snackbarDefinition","slice","snackbar_1","createSnackbar","createSnackbarText","snackbarButton","createButton","snackbar","className","snackbarText","action","SnackbarDefinition","SnackbarButtonDefinition","TextField","input","setEmpty","focus","value","initializeTextFields","textFields"],"mappings":"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","file":"universal-material.min.js","sourcesContent":["\r\nconst template = `\r\n<div class=\"dialog dialog-progress show\">\r\n  <div class=\"dialog-backdrop\"></div>\r\n  <div class=\"dialog-content\">\r\n    <div class=\"dialog-body\">\r\n      <div class=\"preloader-wrapper\">\r\n        <div class=\"spinner-layer\">\r\n          <div class=\"circle-clipper left\">\r\n            <div class=\"circle\"></div>\r\n          </div>\r\n          <div class=\"gap-patch\">\r\n            <div class=\"circle\"></div>\r\n          </div>\r\n          <div class=\"circle-clipper right\">\r\n            <div class=\"circle\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"dialog-progress-message headline6 text-low-contrast text-nowrap\"></div>\r\n    </div>\r\n  </div>\r\n</div>`;\r\n\r\nexport class ProgressDialog {\r\n  private static readonly animationEvents = [\"webkitAnimationEnd\", \"oanimationend\", \"msAnimationEnd\", \"animationend\"];\r\n\r\n  private static addAnimationEndEvents(dialog: HTMLElement) {\r\n    ProgressDialog.animationEvents.forEach(eventName => {\r\n      dialog.addEventListener(eventName, ProgressDialog.onAnimationEnd.bind(this));\r\n    });\r\n  }\r\n\r\n  private static onAnimationEnd(event: Event) {\r\n    event.currentTarget.removeEventListener(event.type, ProgressDialog.onAnimationEnd);\r\n    const element = event.currentTarget as HTMLElement;\r\n\r\n    document.body.removeChild(element.parentNode);\r\n  }\r\n\r\n  static open(message: string): {close: () => any} {\r\n    const dialogContainer = document.createElement(\"div\");\r\n    dialogContainer.innerHTML = template;\r\n    dialogContainer.querySelector<HTMLElement>(\".dialog-progress-message\").innerText = message;\r\n    const dialog = dialogContainer.querySelector<HTMLElement>('.dialog');\r\n\r\n    document.body.appendChild(dialogContainer);\r\n\r\n    return {\r\n      close: () => {\r\n        dialog.classList.add('hide');\r\n        dialog.classList.remove('show');\r\n        this.addAnimationEndEvents(dialog);\r\n      }\r\n    }\r\n  }\r\n}\r\n","export class TextField {\r\n\r\n    element: Element;\r\n    input: HTMLInputElement | HTMLTextAreaElement;\r\n\r\n    constructor(element: Element) {\r\n        const input = element.querySelector('input, textarea') as HTMLInputElement | HTMLTextAreaElement;\r\n\r\n        if (input) {\r\n            input.addEventListener('focus', () => {\r\n                element.classList.add('focus');\r\n            });\r\n\r\n            input.addEventListener('blur', () => {\r\n                element.classList.remove('focus');\r\n            });\r\n\r\n            input.addEventListener('input', () => {\r\n                this.setEmpty();\r\n            });\r\n\r\n            element.addEventListener('click', () => {\r\n                input.focus();\r\n            });\r\n\r\n            this.input = input;\r\n            this.element = element;\r\n\r\n            this.setEmpty();\r\n        }\r\n    }\r\n\r\n    setEmpty() {\r\n        if (this.input.value) {\r\n            this.element.classList.remove('empty')\r\n        } else {\r\n            this.element.classList.add('empty')\r\n        }\r\n    }\r\n\r\n    static initializeTextFields(): void {\r\n        const textFields = document.querySelectorAll('.text-field');\r\n        for (let i = 0; i < textFields.length; i++) {\r\n            const textField = textFields[i];\r\n            new TextField(textField);\r\n        }\r\n    }\r\n}\r\n","export const RippleContainersSelector =\r\n  [\r\n    '.btn',\r\n    '.btn-flat',\r\n    '.btn-borderless',\r\n    '.btn-solid',\r\n    '.btn-raised',\r\n    '.btn-outline',\r\n    '.list-hover .list-item',\r\n    '.list-item .list-item-hover',\r\n    '.tab',\r\n    '.dropdown-item',\r\n    '.radio .selection-control',\r\n    '.checkbox .selection-control',\r\n    '.switch .check-indicator',\r\n    '.chip-remove',\r\n    '.chip-hover'\r\n  ].join(',');\r\n\r\nexport class Ripple {\r\n  disabled = false;\r\n\r\n  constructor(element: HTMLElement) {\r\n    if (window.getComputedStyle(element).position !== \"absolute\" && window.getComputedStyle(element).position !== \"fixed\") {\r\n      element.style.position = \"relative\";\r\n    }\r\n\r\n    let isTouching = false;\r\n\r\n    element.addEventListener('mousedown', (e: MouseEvent) => {\r\n      if (!isTouching) {\r\n        this.createRipple(element, 'mouseup', null, e.clientX, e.clientY);\r\n      }\r\n    });\r\n\r\n    element.addEventListener('touchstart', (e: TouchEvent) => {\r\n      isTouching = true;\r\n      this.createRipple(element, 'touchend', () => {\r\n        setTimeout(() => {\r\n          isTouching = false;\r\n        }, 100);\r\n      }, e.touches[0].clientX, e.touches[0].clientY);\r\n    });\r\n  }\r\n\r\n  createRipple(rippleContainer: Element, releaseEventName: string, releaseCallback: Function, pageX: number, pageY: number) {\r\n    if (this.disabled) return;\r\n\r\n    const rippleWrapper = document.createElement('DIV');\r\n    rippleWrapper.classList.add('ripple-wrapper');\r\n\r\n    const ripple = document.createElement('DIV');\r\n    ripple.classList.add('ripple');\r\n    rippleWrapper.appendChild(ripple);\r\n    rippleContainer.insertAdjacentElement('afterbegin', rippleWrapper);\r\n\r\n    const release = function () {\r\n      ripple.classList.add('dismiss');\r\n\r\n      if (releaseCallback) {\r\n        releaseCallback();\r\n      }\r\n    };\r\n\r\n    window.addEventListener(releaseEventName, release);\r\n    rippleContainer.addEventListener(\"dragover\", release);\r\n\r\n    ripple.addEventListener('transitionend', () => {\r\n      if (ripple.classList.contains('dismiss')) {\r\n        rippleContainer.removeChild(rippleWrapper);\r\n        rippleContainer.removeEventListener(\"dragover\", release);\r\n        window.removeEventListener(releaseEventName, release)\r\n      }\r\n    });\r\n\r\n    requestAnimationFrame(() => {\r\n      const clientRect = rippleContainer.getBoundingClientRect();\r\n      const largestDimensionSize = Math.max(rippleWrapper.clientWidth, rippleWrapper.clientHeight);\r\n      let rippleSize = largestDimensionSize * 2;\r\n      ripple.style.width = rippleSize + 'px';\r\n      ripple.style.height = rippleSize + 'px';\r\n      ripple.style.marginLeft = -rippleSize / 2 + 'px';\r\n      ripple.style.marginTop = -rippleSize / 2 + 'px';\r\n      ripple.style.transitionDuration = (1080 * Math.pow(rippleSize, 0.3)) + 'ms, 750ms';\r\n\r\n      const x = (pageX - clientRect.left) + ((rippleSize - rippleContainer.clientWidth) / 2);\r\n      const y = (pageY - clientRect.top) + ((rippleSize - rippleContainer.clientHeight) / 2);\r\n\r\n      ripple.style.transformOrigin = x + \"px \" + y + \"px\";\r\n      ripple.classList.add('show');\r\n    });\r\n  }\r\n\r\n  static initializeRipples(): void {\r\n    const rippleContainers = document.querySelectorAll(RippleContainersSelector);\r\n\r\n    for (let i = 0; i < rippleContainers.length; i++) {\r\n      new Ripple(rippleContainers[i] as HTMLElement);\r\n\r\n    }\r\n  }\r\n}\r\n","\r\n\r\nexport class Snackbar {\r\n  private static readonly animationEvents = [\"webkitAnimationEnd\", \"oanimationend\", \"msAnimationEnd\", \"animationend\"];\r\n  private static snackbarQueue: SnackbarDefinition[] = [];\r\n  private static consuming: boolean;\r\n\r\n  static show(text: string, duration: SnackbarDuration = SnackbarDuration.long, buttonDefinition?: SnackbarButtonDefinition) {\r\n    Snackbar.snackbarQueue.push({\r\n      text: text,\r\n      duration: duration,\r\n      buttonDefinition: buttonDefinition\r\n    });\r\n\r\n    if (!Snackbar.consuming) {\r\n      Snackbar.consumeQueue();\r\n    }\r\n  }\r\n\r\n  private static consumeQueue() {\r\n\r\n    if (Snackbar.snackbarQueue.length) {\r\n      Snackbar.consuming = true;\r\n      Snackbar.showNext();\r\n    }\r\n  }\r\n\r\n  private static showNext() {\r\n    if (Snackbar.snackbarQueue.length) {\r\n      const snackbarDefinition = Snackbar.snackbarQueue[0];\r\n\r\n      Snackbar.snackbarQueue = Snackbar.snackbarQueue.slice(1);\r\n\r\n      const snackbar = Snackbar.createSnackbar();\r\n\r\n      snackbar.appendChild(Snackbar.createSnackbarText(snackbarDefinition.text));\r\n\r\n      if (snackbarDefinition.buttonDefinition) {\r\n        const snackbarButton = Snackbar.createButton(snackbarDefinition.buttonDefinition);\r\n        snackbar.appendChild(snackbarButton);\r\n      }\r\n\r\n      document.body.appendChild(snackbar);\r\n\r\n      setTimeout(() => {\r\n        snackbar.classList.add(\"dismiss\");\r\n        Snackbar.addAnimationEndEvents(snackbar);\r\n\r\n      }, snackbarDefinition.duration);\r\n    } else {\r\n      Snackbar.consuming = false;\r\n    }\r\n  }\r\n\r\n  private static createSnackbar(): HTMLElement {\r\n    const snackbar = document.createElement(\"div\");\r\n    snackbar.className = \"snackbar\";\r\n\r\n    return snackbar;\r\n  }\r\n\r\n  private static createSnackbarText(text: string): HTMLElement {\r\n    const snackbarText = document.createElement(\"div\");\r\n    snackbarText.innerText = text;\r\n    snackbarText.className = \"snackbar-text\";\r\n\r\n    return snackbarText;\r\n  }\r\n\r\n  private static createButton(buttonDefinition: SnackbarButtonDefinition): HTMLElement {\r\n\r\n    const snackbarButton = document.createElement(\"button\") as HTMLButtonElement;\r\n    snackbarButton.type = \"button\";\r\n    snackbarButton.className = \"btn-flat btn-secondary\";\r\n    snackbarButton.innerText = buttonDefinition.text;\r\n\r\n    new Ripple(snackbarButton);\r\n\r\n    if (buttonDefinition.action) {\r\n      snackbarButton.addEventListener(\"click\", buttonDefinition.action);\r\n    }\r\n\r\n    return snackbarButton;\r\n  }\r\n\r\n  private static addAnimationEndEvents(snackbar: HTMLElement) {\r\n    Snackbar.animationEvents.forEach(eventName => {\r\n      snackbar.addEventListener(eventName, Snackbar.onAnimationEnd.bind(this));\r\n    });\r\n  }\r\n\r\n  private static onAnimationEnd(event: Event) {\r\n    event.currentTarget.removeEventListener(event.type, Snackbar.onAnimationEnd);\r\n    const element = event.currentTarget as HTMLElement;\r\n\r\n    element.parentNode.removeChild(element);\r\n    Snackbar.showNext();\r\n  }\r\n}\r\n\r\nexport enum SnackbarDuration {\r\n  short = 2500,\r\n  long = 5000\r\n}\r\n\r\nexport class SnackbarDefinition {\r\n  text: string;\r\n  duration: SnackbarDuration;\r\n  buttonDefinition: SnackbarButtonDefinition;\r\n}\r\n\r\nexport class SnackbarButtonDefinition {\r\n  text: string;\r\n  action: EventListener;\r\n}\r\n"]}