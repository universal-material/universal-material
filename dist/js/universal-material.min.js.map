{"version":3,"sources":["text-field.ts","dialog.ts","confirm-dialog.ts","progress-dialog.ts","ripple.ts","snackbar.ts"],"names":["umd","DialogOptions","default","disposeWhenClose","Dialog","_dialogElement","dialogOptions","_this","this","onAnimationEnd","event","removeEventListener","type","_dialogOptions","document","body","removeChild","classList","remove","__assign","prototype","addAnimationEndEvents","_animationEvents","forEach","eventName","addEventListener","bind","attach","element","open","add","close","ConfirmDialog","dialog","animationEvents","currentTarget","parentNode","message","dialogContainer","createElement","innerHTML","querySelector","innerText","appendChild","ProgressDialog","dialog_1","RippleContainersSelector","join","Ripple","disabled","window","getComputedStyle","position","style","isTouching","e","createRipple","clientX","clientY","setTimeout","touches","rippleContainer","releaseEventName","releaseCallback","pageX","pageY","rippleWrapper","ripple","insertAdjacentElement","release","contains","requestAnimationFrame","clientRect","getBoundingClientRect","rippleSize","Math","max","clientWidth","clientHeight","width","height","marginLeft","marginTop","transitionDuration","pow","x","left","y","top","transformOrigin","initializeRipples","rippleContainers","querySelectorAll","i","length","SnackbarDuration","Snackbar","show","text","duration","buttonDefinition","long","_snackbarQueue","push","_consuming","consumeQueue","showNext","snackbarDefinition","slice","snackbar_1","createSnackbar","createSnackbarText","snackbarButton","createButton","snackbar","className","snackbarText","action","SnackbarDefinition","SnackbarButtonDefinition","TextField","input","setEmpty","focus","value","initializeTextFields","textFields"],"mappings":"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","file":"universal-material.min.js","sourcesContent":["export class TextField {\r\n\r\n    element: Element;\r\n    input: HTMLInputElement | HTMLTextAreaElement;\r\n\r\n    constructor(element: Element) {\r\n        const input = element.querySelector('input, textarea') as HTMLInputElement | HTMLTextAreaElement;\r\n\r\n        if (input) {\r\n            input.addEventListener('focus', () => {\r\n                element.classList.add('focus');\r\n            });\r\n\r\n            input.addEventListener('blur', () => {\r\n                element.classList.remove('focus');\r\n            });\r\n\r\n            input.addEventListener('input', () => {\r\n                this.setEmpty();\r\n            });\r\n\r\n            element.addEventListener('click', () => {\r\n                input.focus();\r\n            });\r\n\r\n            this.input = input;\r\n            this.element = element;\r\n\r\n            this.setEmpty();\r\n        }\r\n    }\r\n\r\n    setEmpty() {\r\n        if (this.input.value) {\r\n            this.element.classList.remove('empty')\r\n        } else {\r\n            this.element.classList.add('empty')\r\n        }\r\n    }\r\n\r\n    static initializeTextFields(): void {\r\n        const textFields = document.querySelectorAll('.text-field');\r\n        for (let i = 0; i < textFields.length; i++) {\r\n            const textField = textFields[i];\r\n            new TextField(textField);\r\n        }\r\n    }\r\n}\r\n","export class DialogOptions {\r\n  static readonly default: DialogOptions = {\r\n    disposeWhenClose: false\r\n  };\r\n\r\n  disposeWhenClose?: boolean\r\n}\r\n\r\nexport class Dialog {\r\n  private static readonly _animationEvents = [\"webkitAnimationEnd\", \"oanimationend\", \"msAnimationEnd\", \"animationend\"];\r\n  private readonly _dialogOptions: DialogOptions;\r\n\r\n  constructor(private readonly _dialogElement: HTMLElement,\r\n              dialogOptions: DialogOptions) {\r\n    this._dialogOptions = {...DialogOptions.default, ...dialogOptions};\r\n  }\r\n\r\n  private addAnimationEndEvents() {\r\n    Dialog._animationEvents.forEach(eventName => {\r\n      this._dialogElement.addEventListener(eventName, this.onAnimationEnd.bind(this));\r\n    });\r\n  }\r\n\r\n  private onAnimationEnd = (event: Event) => {\r\n    this._dialogElement.removeEventListener(event.type, this.onAnimationEnd);\r\n\r\n    if (this._dialogOptions.disposeWhenClose) {\r\n      document.body.removeChild(this._dialogElement);\r\n    } else {\r\n      this._dialogElement.classList.remove('hide');\r\n    }\r\n  };\r\n\r\n  static attach(element: HTMLElement, dialogOptions?: DialogOptions): Dialog {\r\n    return new Dialog(element, dialogOptions);\r\n  }\r\n\r\n  open() {\r\n    this._dialogElement.classList.add('show');\r\n  }\r\n\r\n  close() {\r\n    this._dialogElement.classList.add('hide');\r\n    this._dialogElement.classList.remove('show');\r\n    this.addAnimationEndEvents();\r\n  }\r\n}\r\n","const template = `\r\n<div class=\"dialog dialog-progress show\">\r\n  <div class=\"dialog-backdrop\"></div>\r\n  <div class=\"dialog-content\">\r\n    <div class=\"dialog-title\"></div> \r\n    <div class=\"dialog-body\">\r\n      \r\n      <div class=\"dialog-progress-message headline6 text-low-contrast text-nowrap\"></div>\r\n    </div>\r\n  </div>\r\n</div>`;\r\n\r\nexport class ConfirmDialog {\r\n  private static readonly animationEvents = [\"webkitAnimationEnd\", \"oanimationend\", \"msAnimationEnd\", \"animationend\"];\r\n\r\n  private static addAnimationEndEvents(dialog: HTMLElement) {\r\n    ConfirmDialog.animationEvents.forEach(eventName => {\r\n      dialog.addEventListener(eventName, ConfirmDialog.onAnimationEnd.bind(this));\r\n    });\r\n  }\r\n\r\n  private static onAnimationEnd(event: Event) {\r\n    event.currentTarget.removeEventListener(event.type, ConfirmDialog.onAnimationEnd);\r\n    const element = event.currentTarget as HTMLElement;\r\n\r\n    document.body.removeChild(element.parentNode);\r\n  }\r\n\r\n  static open(message: string): {close: () => any} {\r\n    const dialogContainer = document.createElement(\"div\");\r\n    dialogContainer.innerHTML = template;\r\n    dialogContainer.querySelector<HTMLElement>(\".dialog-progress-message\").innerText = message;\r\n    const dialog = dialogContainer.querySelector<HTMLElement>('.dialog');\r\n\r\n    document.body.appendChild(dialogContainer);\r\n\r\n    return {\r\n      close: () => {\r\n        dialog.classList.add('hide');\r\n        dialog.classList.remove('show');\r\n        this.addAnimationEndEvents(dialog);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {Dialog} from \"./dialog\";\r\n\r\nconst template = `\r\n<div class=\"dialog dialog-progress show\">\r\n  <div class=\"dialog-backdrop\"></div>\r\n  <div class=\"dialog-content\">\r\n    <div class=\"dialog-body\">\r\n      <div class=\"preloader-wrapper\">\r\n        <div class=\"spinner-layer\">\r\n          <div class=\"circle-clipper left\">\r\n            <div class=\"circle\"></div>\r\n          </div>\r\n          <div class=\"gap-patch\">\r\n            <div class=\"circle\"></div>\r\n          </div>\r\n          <div class=\"circle-clipper right\">\r\n            <div class=\"circle\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"dialog-progress-message headline6 text-low-contrast text-nowrap\"></div>\r\n    </div>\r\n  </div>\r\n</div>`;\r\n\r\nexport class ProgressDialog {\r\n  static open(message: string): {close: () => any} {\r\n    const dialogContainer = document.createElement(\"div\");\r\n    dialogContainer.innerHTML = template;\r\n    dialogContainer.querySelector<HTMLElement>(\".dialog-progress-message\").innerText = message;\r\n    const dialog = dialogContainer.querySelector<HTMLElement>('.dialog');\r\n\r\n    document.body.appendChild(dialogContainer);\r\n\r\n    return Dialog.attach(dialog, {\r\n      disposeWhenClose: true\r\n    });\r\n  }\r\n}\r\n","export const RippleContainersSelector =\r\n  [\r\n    '.btn',\r\n    '.btn-flat',\r\n    '.btn-borderless',\r\n    '.btn-solid',\r\n    '.btn-raised',\r\n    '.btn-outline',\r\n    '.list-hover .list-item',\r\n    '.list-item .list-item-hover',\r\n    '.tab',\r\n    '.dropdown-item',\r\n    '.radio .selection-control',\r\n    '.checkbox .selection-control',\r\n    '.switch .check-indicator',\r\n    '.chip-remove',\r\n    '.chip-hover'\r\n  ].join(',');\r\n\r\nexport class Ripple {\r\n  disabled = false;\r\n\r\n  constructor(element: HTMLElement) {\r\n    if (window.getComputedStyle(element).position !== \"absolute\" && window.getComputedStyle(element).position !== \"fixed\") {\r\n      element.style.position = \"relative\";\r\n    }\r\n\r\n    let isTouching = false;\r\n\r\n    element.addEventListener('mousedown', (e: MouseEvent) => {\r\n      if (!isTouching) {\r\n        this.createRipple(element, 'mouseup', null, e.clientX, e.clientY);\r\n      }\r\n    });\r\n\r\n    element.addEventListener('touchstart', (e: TouchEvent) => {\r\n      isTouching = true;\r\n      this.createRipple(element, 'touchend', () => {\r\n        setTimeout(() => {\r\n          isTouching = false;\r\n        }, 100);\r\n      }, e.touches[0].clientX, e.touches[0].clientY);\r\n    });\r\n  }\r\n\r\n  createRipple(rippleContainer: Element, releaseEventName: string, releaseCallback: Function, pageX: number, pageY: number) {\r\n    if (this.disabled) return;\r\n\r\n    const rippleWrapper = document.createElement('DIV');\r\n    rippleWrapper.classList.add('ripple-wrapper');\r\n\r\n    const ripple = document.createElement('DIV');\r\n    ripple.classList.add('ripple');\r\n    rippleWrapper.appendChild(ripple);\r\n    rippleContainer.insertAdjacentElement('afterbegin', rippleWrapper);\r\n\r\n    const release = function () {\r\n      ripple.classList.add('dismiss');\r\n\r\n      if (releaseCallback) {\r\n        releaseCallback();\r\n      }\r\n    };\r\n\r\n    window.addEventListener(releaseEventName, release);\r\n    rippleContainer.addEventListener(\"dragover\", release);\r\n\r\n    ripple.addEventListener('transitionend', () => {\r\n      if (ripple.classList.contains('dismiss')) {\r\n        rippleContainer.removeChild(rippleWrapper);\r\n        rippleContainer.removeEventListener(\"dragover\", release);\r\n        window.removeEventListener(releaseEventName, release)\r\n      }\r\n    });\r\n\r\n    requestAnimationFrame(() => {\r\n      const clientRect = rippleContainer.getBoundingClientRect();\r\n      const largestDimensionSize = Math.max(rippleWrapper.clientWidth, rippleWrapper.clientHeight);\r\n      let rippleSize = largestDimensionSize * 2;\r\n      ripple.style.width = rippleSize + 'px';\r\n      ripple.style.height = rippleSize + 'px';\r\n      ripple.style.marginLeft = -rippleSize / 2 + 'px';\r\n      ripple.style.marginTop = -rippleSize / 2 + 'px';\r\n      ripple.style.transitionDuration = (1080 * Math.pow(rippleSize, 0.3)) + 'ms, 750ms';\r\n\r\n      const x = (pageX - clientRect.left) + ((rippleSize - rippleContainer.clientWidth) / 2);\r\n      const y = (pageY - clientRect.top) + ((rippleSize - rippleContainer.clientHeight) / 2);\r\n\r\n      ripple.style.transformOrigin = x + \"px \" + y + \"px\";\r\n      ripple.classList.add('show');\r\n    });\r\n  }\r\n\r\n  static initializeRipples(): void {\r\n    const rippleContainers = document.querySelectorAll(RippleContainersSelector);\r\n\r\n    for (let i = 0; i < rippleContainers.length; i++) {\r\n      new Ripple(rippleContainers[i] as HTMLElement);\r\n\r\n    }\r\n  }\r\n}\r\n","\r\n\r\nexport class Snackbar {\r\n  private static readonly _animationEvents = [\"webkitAnimationEnd\", \"oanimationend\", \"msAnimationEnd\", \"animationend\"];\r\n  private static _snackbarQueue: SnackbarDefinition[] = [];\r\n  private static _consuming: boolean;\r\n\r\n  static show(text: string, duration: SnackbarDuration = SnackbarDuration.long, buttonDefinition?: SnackbarButtonDefinition) {\r\n    Snackbar._snackbarQueue.push({\r\n      text: text,\r\n      duration: duration,\r\n      buttonDefinition: buttonDefinition\r\n    });\r\n\r\n    if (!Snackbar._consuming) {\r\n      Snackbar.consumeQueue();\r\n    }\r\n  }\r\n\r\n  private static consumeQueue() {\r\n\r\n    if (Snackbar._snackbarQueue.length) {\r\n      Snackbar._consuming = true;\r\n      Snackbar.showNext();\r\n    }\r\n  }\r\n\r\n  private static showNext() {\r\n    if (Snackbar._snackbarQueue.length) {\r\n      const snackbarDefinition = Snackbar._snackbarQueue[0];\r\n\r\n      Snackbar._snackbarQueue = Snackbar._snackbarQueue.slice(1);\r\n\r\n      const snackbar = Snackbar.createSnackbar();\r\n\r\n      snackbar.appendChild(Snackbar.createSnackbarText(snackbarDefinition.text));\r\n\r\n      if (snackbarDefinition.buttonDefinition) {\r\n        const snackbarButton = Snackbar.createButton(snackbarDefinition.buttonDefinition);\r\n        snackbar.appendChild(snackbarButton);\r\n      }\r\n\r\n      document.body.appendChild(snackbar);\r\n\r\n      setTimeout(() => {\r\n        snackbar.classList.add(\"dismiss\");\r\n        Snackbar.addAnimationEndEvents(snackbar);\r\n\r\n      }, snackbarDefinition.duration);\r\n    } else {\r\n      Snackbar._consuming = false;\r\n    }\r\n  }\r\n\r\n  private static createSnackbar(): HTMLElement {\r\n    const snackbar = document.createElement(\"div\");\r\n    snackbar.className = \"snackbar\";\r\n\r\n    return snackbar;\r\n  }\r\n\r\n  private static createSnackbarText(text: string): HTMLElement {\r\n    const snackbarText = document.createElement(\"div\");\r\n    snackbarText.innerText = text;\r\n    snackbarText.className = \"snackbar-text\";\r\n\r\n    return snackbarText;\r\n  }\r\n\r\n  private static createButton(buttonDefinition: SnackbarButtonDefinition): HTMLElement {\r\n\r\n    const snackbarButton = document.createElement(\"button\") as HTMLButtonElement;\r\n    snackbarButton.type = \"button\";\r\n    snackbarButton.className = \"btn-flat btn-secondary\";\r\n    snackbarButton.innerText = buttonDefinition.text;\r\n\r\n    new Ripple(snackbarButton);\r\n\r\n    if (buttonDefinition.action) {\r\n      snackbarButton.addEventListener(\"click\", buttonDefinition.action);\r\n    }\r\n\r\n    return snackbarButton;\r\n  }\r\n\r\n  private static addAnimationEndEvents(snackbar: HTMLElement) {\r\n    Snackbar._animationEvents.forEach(eventName => {\r\n      snackbar.addEventListener(eventName, Snackbar.onAnimationEnd.bind(this));\r\n    });\r\n  }\r\n\r\n  private static onAnimationEnd(event: Event) {\r\n    event.currentTarget.removeEventListener(event.type, Snackbar.onAnimationEnd);\r\n    const element = event.currentTarget as HTMLElement;\r\n\r\n    element.parentNode.removeChild(element);\r\n    Snackbar.showNext();\r\n  }\r\n}\r\n\r\nexport enum SnackbarDuration {\r\n  short = 2500,\r\n  long = 5000\r\n}\r\n\r\nexport class SnackbarDefinition {\r\n  text: string;\r\n  duration: SnackbarDuration;\r\n  buttonDefinition: SnackbarButtonDefinition;\r\n}\r\n\r\nexport class SnackbarButtonDefinition {\r\n  text: string;\r\n  action: EventListener;\r\n}\r\n"]}