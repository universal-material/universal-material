{"version":3,"sources":["quick-dialog.ts","confirm-dialog.ts","custom-event.polyfill.ts","dialog.ts","dropdown.ts","progress-dialog.ts","ripple.ts","snackbar.ts","tab-bar.ts","text-field.ts"],"names":["umd","QuickDialogConfig","default","closeOnBackdropClick","closeOnEsc","QuickDialog","template","config","beforeCreateDialog","_this","this","_keyDownEvent","event","which","_innerDialog","close","preventDefault","_template","_config","__assign","_createDialog","prototype","dialogContainer","document","createElement","innerHTML","dialogElement","querySelector","_configureDialog","body","appendChild","addEventListener","removeChild","removeEventListener","_onClosed","Dialog","attach","destroyWhenClose","_setEscapeEvent","ConfirmDialogConfig","_super","__extends","confirmLabel","cancelLabel","ConfirmDialog","message","call","_message","open","titleElement","title","innerText","parentNode","confirmButton","cancelButton","Ripple","onConfirm","onCancel","CustomEvent","params","bubbles","cancelable","detail","undefined","evt","createEvent","initCustomEvent","window","DialogConfig","closedEvent","dialogBodyTopDividerClassName","dialogBodyBottomDividerClassName","_dialogElement","dialogConfig","onAnimationEnd","type","dispatchEvent","_dialogConfig","classList","remove","toggle","_showing","add","addAnimationEndEvents","_dialogBodyElement","_setBodyDividers","_setDialogBodyScrollHandler","_animationEvents","forEach","eventName","bind","element","scrollTop","offsetHeight","scrollHeight","DropdownConfig","closeEvent","openEvent","Dropdown","_dropdownElement","dropdownConfig","_dropdownMenu","_dropdownToggle","_dropdownConfig","_attachEvents","e","stopPropagation","initializeDropdowns","dropdowns","querySelectorAll","i","length","dropdown","ProgressDialogConfig","ProgressDialog","style","display","RippleContainersSelector","join","RippleConfig","RippleConfigMap","selector","subSelector","disabled","getComputedStyle","position","isTouching","createRipple","clientX","clientY","setTimeout","touches","rippleContainer","releaseEventName","releaseCallback","pageX","pageY","rippleWrapper","ripple","insertAdjacentElement","size","_setElementSquareSizeAndCenter","borderRadius","release","contains","requestAnimationFrame","clientRect","getBoundingClientRect","largestDimensionSize","Math","max","clientWidth","clientHeight","rippleSize","transitionDuration","pow","x","left","y","top","transformOrigin","width","height","marginLeft","marginTop","_initilizeRipples","rippleContainers","initializeRipples","rippleConfig","SnackbarDuration","Snackbar","show","text","duration","buttonDefinition","long","_snackbarQueue","push","_consuming","consumeQueue","showNext","snackbarDefinition","slice","snackbar_1","createSnackbar","createSnackbarText","snackbarButton","createButton","snackbar","className","snackbarText","action","currentTarget","SnackbarDefinition","SnackbarButtonDefinition","TabBar","_tabBarElement","_tabMap","_tabClick","tab","setActiveTab","index","_tabIndicatorElement","_setTabInfoMap","_updateTabIndicator","tabIndex","isNaN","currentTabIndex","recalculateBounds","tabBounds","offset","tabs","tabBarElement","initializeTabBars","tabBars","tabBar","TextField","input","nodeName","toLowerCase","HTMLInputElement","HTMLTextAreaElement","setEmpty","descriptor_1","Object","getOwnPropertyDescriptor","inputSetter_1","set","val","defineProperty","value","initializeTextFields","textFields"],"mappings":"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","file":"universal-material.min.js","sourcesContent":["\r\n\r\nconst EscapeKeyCode = 27;\r\n\r\nexport class QuickDialogConfig {\r\n  static default: QuickDialogConfig = {\r\n    closeOnBackdropClick: true,\r\n    closeOnEsc: true\r\n  };\r\n\r\n  closeOnBackdropClick?: boolean;\r\n  closeOnEsc?: boolean;\r\n}\r\n\r\nexport abstract class QuickDialog<T extends QuickDialogConfig> {\r\n  private readonly _template: string;\r\n  protected _config: T;\r\n  protected _innerDialog: Dialog;\r\n\r\n  protected constructor(template: string, config?: any, beforeCreateDialog?: Function) {\r\n    this._template = template;\r\n    this._config = {...QuickDialogConfig.default, ...config};\r\n    if (beforeCreateDialog) beforeCreateDialog();\r\n    this._createDialog();\r\n  }\r\n\r\n  private _keyDownEvent = (event: KeyboardEvent) => {\r\n    if (event.which === EscapeKeyCode) {\r\n      this._innerDialog.close();\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  private _createDialog() {\r\n    const dialogContainer = document.createElement('div');\r\n    dialogContainer.innerHTML = this._template;\r\n\r\n    const dialogElement = dialogContainer.querySelector<HTMLElement>('.u-dialog');\r\n    this._configureDialog(dialogElement);\r\n\r\n    document.body.appendChild(dialogContainer);\r\n\r\n    dialogElement.addEventListener('closed', () => {\r\n      document.body.removeChild(dialogContainer);\r\n      document.body.removeEventListener('keydown', this._keyDownEvent, true);\r\n      this._onClosed();\r\n    });\r\n\r\n    this._innerDialog = Dialog.attach(dialogElement, {\r\n      destroyWhenClose: true\r\n    });\r\n\r\n    if (this._config.closeOnEsc) {\r\n      this._setEscapeEvent();\r\n    }\r\n\r\n    if (this._config.closeOnBackdropClick) {\r\n      dialogElement\r\n        .querySelector('.u-dialog-backdrop')\r\n        .addEventListener('click', () => this._innerDialog.close(), true);\r\n    }\r\n  }\r\n\r\n  protected abstract _configureDialog(dialogElement: HTMLElement): void;\r\n\r\n  close(): void {\r\n    this._innerDialog.close();\r\n  }\r\n\r\n  protected _onClosed() {\r\n\r\n  }\r\n\r\n  private _setEscapeEvent() {\r\n    document.body.addEventListener('keydown', this._keyDownEvent, true);\r\n  }\r\n}\r\n","\n\n\nexport class ConfirmDialogConfig extends QuickDialogConfig {\n  static readonly default: ConfirmDialogConfig = {\n    confirmLabel: \"Ok\",\n    cancelLabel: \"Cancel\",\n    ...QuickDialogConfig.default\n  };\n\n  onConfirm?: Function;\n  onCancel?: Function;\n  title?: string;\n  confirmLabel?: string;\n  cancelLabel?: string;\n}\n\nconst confirmDialogTemplate = `\n<div class=\"u-dialog show\">\n  <div class=\"u-dialog-backdrop\"></div>\n  <div class=\"u-dialog-content\">\n    <div class=\"u-dialog-header\">\n      <div class=\"u-dialog-title\"></div>\n    </div>    \n    <div class=\"u-dialog-body\"></div>\n    <div class=\"u-dialog-actions\">\n      <button type=\"button\" class=\"u-btn-flat u-btn-primary\" cancelButton></button>\n      <button type=\"button\" class=\"u-btn-flat u-btn-primary\" confirmButton></button>\n    </div>\n  </div>\n</div>`;\n\nexport class ConfirmDialog extends QuickDialog<ConfirmDialogConfig> {\n\n  private readonly _message: string;\n\n  static open(message: string, config?: ConfirmDialogConfig): ConfirmDialog {\n    return new ConfirmDialog(message, config);\n  }\n\n  constructor(message: string, config?: ConfirmDialogConfig) {\n    super(confirmDialogTemplate, {...ConfirmDialogConfig.default, _message: message, ...config});\n\n    this._message = message;\n  }\n\n  protected  _configureDialog(dialogElement: HTMLElement): void {\n    const titleElement = dialogElement.querySelector<HTMLElement>('.u-dialog-title');\n\n    if (this._config.title) {\n      titleElement.innerText = this._config.title;\n    } else {\n      titleElement.parentNode.removeChild(titleElement);\n    }\n    dialogElement.querySelector<HTMLElement>('.u-dialog-body').innerText = this._config['_message'];\n\n    const confirmButton = dialogElement.querySelector<HTMLElement>('[confirmButton]');\n    const cancelButton = dialogElement.querySelector<HTMLElement>('[cancelButton]');\n\n    confirmButton.innerText = this._config.confirmLabel;\n    cancelButton.innerText = this._config.cancelLabel;\n\n    Ripple.attach(confirmButton);\n    Ripple.attach(cancelButton);\n\n    confirmButton.addEventListener('click', () => {\n      this._innerDialog.close();\n      if (this._config.onConfirm) this._config.onConfirm();\n    });\n\n    cancelButton.addEventListener('click', () => {\n      this._innerDialog.close();\n      if (this._config.onCancel) this._config.onCancel();\n    });\n  }\n}\n","(function () {\r\n  if (typeof window['CustomEvent'] === \"function\") return;\r\n\r\n  function CustomEvent(event: string, params: any) {\r\n    params = params || {bubbles: false, cancelable: false, detail: undefined};\r\n    let evt = document.createEvent('CustomEvent');\r\n    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\r\n    return evt;\r\n  }\r\n\r\n  CustomEvent.prototype = window['Event'].prototype;\r\n\r\n  window['CustomEvent'] = CustomEvent;\r\n})();\r\n","export class DialogConfig {\n  static readonly default: DialogConfig = {\n    destroyWhenClose: false\n  };\n\n  destroyWhenClose?: boolean\n}\n\nconst closedEvent = new CustomEvent('closed');\nconst dialogBodyTopDividerClassName = 'u-dialog-scroll-top-divider';\nconst dialogBodyBottomDividerClassName = 'u-dialog-scroll-bottom-divider';\n\nexport class Dialog {\n  private static readonly _animationEvents = [\"webkitAnimationEnd\", \"oanimationend\", \"msAnimationEnd\", \"animationend\"];\n  private readonly _dialogConfig: DialogConfig;\n  private readonly _dialogBodyElement: HTMLElement;\n  private _showing: boolean;\n\n  constructor(private readonly _dialogElement: HTMLElement,\n              dialogConfig: DialogConfig) {\n    this._dialogConfig = {...DialogConfig.default, ...dialogConfig};\n    this._dialogBodyElement = this._dialogElement.querySelector<HTMLElement>('.u-dialog-body');\n\n    if (this._dialogBodyElement) {\n      this._setBodyDividers();\n      this._setDialogBodyScrollHandler();\n    }\n  }\n\n  private addAnimationEndEvents() {\n    Dialog._animationEvents.forEach(eventName => {\n      this._dialogElement.addEventListener(eventName, this.onAnimationEnd.bind(this));\n    });\n  }\n\n  private onAnimationEnd = (event: Event) => {\n    this._dialogElement.removeEventListener(event.type, this.onAnimationEnd);\n    this._dialogElement.dispatchEvent(closedEvent);\n\n    if (this._dialogConfig.destroyWhenClose) {\n      this._dialogElement.parentNode.removeChild(this._dialogElement);\n    } else {\n      this._dialogElement.classList.remove('hide');\n    }\n  };\n\n  static attach(element: HTMLElement, dialogConfig?: DialogConfig): Dialog {\n    return new Dialog(element, dialogConfig);\n  }\n\n  toggle =() => {\n    const action = this._showing ? this.close : this.open;\n    action();\n  };\n\n  open =() => {\n    this._dialogElement.classList.add('show');\n    this._showing = true;\n  };\n\n  close =() => {\n    this._dialogElement.classList.add('hide');\n    this._dialogElement.classList.remove('show');\n    this._showing = false;\n    this.addAnimationEndEvents();\n  };\n\n  private _setBodyDividers() {\n    if(this._dialogBodyElement.scrollTop) {\n      this._dialogElement.classList.add(dialogBodyTopDividerClassName);\n    } else {\n      this._dialogElement.classList.remove(dialogBodyTopDividerClassName);\n    }\n\n    const scrollBottom = this._dialogBodyElement.scrollTop + this._dialogBodyElement.offsetHeight;\n\n    if (scrollBottom !== this._dialogBodyElement.scrollHeight) {\n      this._dialogElement.classList.add(dialogBodyBottomDividerClassName);\n    } else {\n      this._dialogElement.classList.remove(dialogBodyBottomDividerClassName);\n    }\n  }\n\n  private _setDialogBodyScrollHandler() {\n    this._dialogBodyElement.addEventListener('scroll', this._setBodyDividers.bind(this), true);\n  }\n}\n","export class DropdownConfig {\r\n  static readonly default: DropdownConfig = {\r\n\r\n  };\r\n}\r\n\r\nconst closeEvent = new CustomEvent('close');\r\nconst openEvent = new CustomEvent('open');\r\nconst EnterKey = 13;\r\nconst EscapeKey = 27;\r\nconst SpaceKey = 32;\r\n\r\nexport class Dropdown {\r\n  private readonly _dropdownConfig: DropdownConfig;\r\n  private readonly _dropdownToggle: HTMLElement;\r\n  private readonly _dropdownMenu: HTMLElement;\r\n  private _showing: boolean;\r\n\r\n  constructor(private readonly _dropdownElement: HTMLElement,\r\n              dropdownConfig: DropdownConfig) {\r\n    this._dropdownToggle = _dropdownElement.querySelector('.u-dropdown-toggle');\r\n    this._dropdownMenu = _dropdownElement.querySelector('.u-dropdown-menu');\r\n    if (!this._dropdownToggle || !this._dropdownToggle) return;\r\n\r\n    this._dropdownConfig = {...DropdownConfig.default, ...dropdownConfig};\r\n    this._attachEvents();\r\n  }\r\n  static attach(element: HTMLElement, dropdownConfig?: DropdownConfig): Dropdown {\r\n    return new Dropdown(element, dropdownConfig);\r\n  }\r\n\r\n  _attachEvents() {\r\n    this._dropdownToggle.addEventListener('click', e => {\r\n      e.stopPropagation();\r\n    });\r\n\r\n    document.addEventListener('click', () => {\r\n      this.close();\r\n    });\r\n\r\n    this._dropdownToggle.addEventListener('mouseup', e => {\r\n      this.toggle();\r\n    });\r\n\r\n    this._dropdownToggle.addEventListener('keyup', e => {\r\n      switch (e.which) {\r\n        case EscapeKey:\r\n          this.close();\r\n          break;\r\n        case SpaceKey:\r\n          this.open();\r\n          break;\r\n        case EnterKey:\r\n          this.toggle();\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  toggle = () => {\r\n    const action = this._showing ? this.close : this.open;\r\n    action();\r\n  };\r\n\r\n  open = () => {\r\n    this._dropdownMenu.classList.add('show');\r\n    this._showing = true;\r\n    this._dropdownElement.dispatchEvent(openEvent);\r\n  };\r\n\r\n  close = () => {\r\n    this._dropdownMenu.classList.remove('show');\r\n    this._showing = false;\r\n    this._dropdownElement.dispatchEvent(closeEvent);\r\n  };\r\n\r\n  static initializeDropdowns(): void {\r\n    const dropdowns = document.querySelectorAll('.u-dropdown');\r\n    for (let i = 0; i < dropdowns.length; i++) {\r\n      const dropdown = dropdowns[i] as HTMLElement;\r\n      Dropdown.attach(dropdown);\r\n    }\r\n  }\r\n}\r\n","\r\n\r\nexport class ProgressDialogConfig extends QuickDialogConfig {\r\n  static readonly default: ProgressDialogConfig = {\r\n    ...QuickDialogConfig.default,\r\n    closeOnBackdropClick: false,\r\n    closeOnEsc: false\r\n  };\r\n}\r\n\r\nconst progressDialogTemplate = `\r\n<div class=\"u-dialog u-dialog-progress show\">\r\n  <div class=\"u-dialog-backdrop\"></div>\r\n  <div class=\"u-dialog-content\">\r\n    <div class=\"u-dialog-body\">\r\n      <div class=\"preloader-wrapper\">\r\n        <div class=\"spinner-layer\">\r\n          <div class=\"circle-clipper left\">\r\n            <div class=\"circle\"></div>\r\n          </div>\r\n          <div class=\"gap-patch\">\r\n            <div class=\"circle\"></div>\r\n          </div>\r\n          <div class=\"circle-clipper right\">\r\n            <div class=\"circle\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"u-dialog-progress-message u-headline6 text-low-contrast text-nowrap\"></div>\r\n    </div>\r\n  </div>\r\n</div>`;\r\n\r\nexport class ProgressDialog extends QuickDialog<ProgressDialogConfig> {\r\n\r\n  private readonly _message: string;\r\n\r\n  static open(message: string, config?: ProgressDialogConfig): ProgressDialog {\r\n    return new ProgressDialog(message, config);\r\n  }\r\n\r\n  constructor(message: string, config?: ProgressDialogConfig) {\r\n    super(progressDialogTemplate, {...ProgressDialogConfig.default, _message: message, ...config});\r\n\r\n    this._message = message;\r\n  }\r\n\r\n  protected  _configureDialog(dialogElement: HTMLElement): void {\r\n    const message = this._config['_message'];\r\n\r\n    if (message) {\r\n      dialogElement.querySelector<HTMLElement>('.u-dialog-progress-message').innerText = message;\r\n    } else {\r\n      dialogElement.querySelector<HTMLElement>('.u-dialog-progress-message').style.display = 'none';\r\n    }\r\n  }\r\n}\r\n","export const RippleContainersSelector =\n  [\n    '.u-btn',\n    '.u-btn-flat',\n    '.u-btn-solid',\n    '.u-btn-raised',\n    '.u-btn-outline',\n    '.u-btn-floating',\n    '.u-btn-borderless',\n    '.u-tab',\n    '.u-dropdown-item',\n    '.u-chip-remove',\n    '.u-chip-hover',\n    '.u-text-input.u-dropdown-toggle'\n  ].join(',');\n\nexport class RippleConfig {\n  size?: number;\n  borderRadius?: string;\n}\n\nexport const RippleConfigMap = [\n  {\n    selector: '.u-list-selectable',\n    subSelector: '.u-list-item',\n    config: null\n  },\n  {\n    selector: '.u-list-item',\n    subSelector: '.u-list-item-hover',\n    config: null\n  },\n  {\n    selector: '.u-radio',\n    subSelector: '.u-selection-control',\n    config: null\n  },\n  {\n    selector: '.u-switch',\n    subSelector: '.u-check-indicator',\n    config: null\n  },\n  {\n    selector: '.u-checkbox',\n    subSelector: '.u-selection-control',\n    config: null\n  }\n];\n\nexport class Ripple {\n  private readonly _config: RippleConfig;\n  disabled = false;\n\n  static attach(element: HTMLElement, config?: RippleConfig): Ripple {\n    return new Ripple(element, config);\n  }\n\n  constructor(element: HTMLElement, config?: RippleConfig) {\n    this._config = {...config};\n\n    if (window.getComputedStyle(element).position !== \"absolute\" && window.getComputedStyle(element).position !== \"fixed\") {\n      element.style.position = \"relative\";\n    }\n\n    let isTouching = false;\n\n    element.addEventListener('mousedown', (e: MouseEvent) => {\n      if (!isTouching) {\n        this.createRipple(element, 'mouseup', null, e.clientX, e.clientY);\n      }\n    });\n\n    element.addEventListener('touchstart', (e: TouchEvent) => {\n      isTouching = true;\n      this.createRipple(element, 'touchend', () => {\n        setTimeout(() => {\n          isTouching = false;\n        }, 100);\n      }, e.touches[0].clientX, e.touches[0].clientY);\n    });\n  }\n\n  createRipple(rippleContainer: Element, releaseEventName: string, releaseCallback: Function, pageX: number, pageY: number) {\n    if (this.disabled) return;\n\n    const rippleWrapper = document.createElement('DIV');\n    rippleWrapper.classList.add('u-ripple-wrapper');\n\n    const ripple = document.createElement('DIV');\n    ripple.classList.add('u-ripple');\n    rippleWrapper.appendChild(ripple);\n    rippleContainer.insertAdjacentElement('afterbegin', rippleWrapper);\n\n    if (this._config.size) {\n      Ripple._setElementSquareSizeAndCenter(rippleWrapper, this._config.size);\n    }\n\n    if (this._config.borderRadius) {\n      rippleWrapper.style.borderRadius = this._config.borderRadius;\n    }\n\n    const release = function () {\n      ripple.classList.add('dismiss');\n\n      if (releaseCallback) {\n        releaseCallback();\n      }\n    };\n\n    window.addEventListener(releaseEventName, release);\n    rippleContainer.addEventListener(\"dragover\", release);\n\n    ripple.addEventListener('transitionend', () => {\n      if (ripple.classList.contains('dismiss')) {\n        rippleContainer.removeChild(rippleWrapper);\n        rippleContainer.removeEventListener(\"dragover\", release);\n        window.removeEventListener(releaseEventName, release)\n      }\n    });\n\n    requestAnimationFrame(() => {\n      const clientRect = rippleContainer.getBoundingClientRect();\n      const largestDimensionSize = Math.max(rippleWrapper.clientWidth, rippleWrapper.clientHeight);\n      let rippleSize = this._config.size || largestDimensionSize * 2;\n      Ripple._setElementSquareSizeAndCenter(ripple, rippleSize);\n      ripple.style.transitionDuration = (1080 * Math.pow(rippleSize, 0.3)) + 'ms, 750ms';\n\n      const x = (pageX - clientRect.left) + ((rippleSize - rippleContainer.clientWidth) / 2);\n      const y = (pageY - clientRect.top) + ((rippleSize - rippleContainer.clientHeight) / 2);\n\n      ripple.style.transformOrigin = x + \"px \" + y + \"px\";\n      ripple.classList.add('show');\n    });\n  }\n\n  private static _setElementSquareSizeAndCenter(element: HTMLElement, size: number) {\n    element.style.top = \"50%\";\n    element.style.left = \"50%\";\n    element.style.width = size + 'px';\n    element.style.height = size + 'px';\n    element.style.marginLeft = -size / 2 + 'px';\n    element.style.marginTop = -size / 2 + 'px';\n  }\n\n  private static _initilizeRipples(selector: string, config?: RippleConfig) {\n    const rippleContainers = document.querySelectorAll(selector);\n\n    for (let i = 0; i < rippleContainers.length; i++) {\n      new Ripple(rippleContainers[i] as HTMLElement, config);\n    }\n  }\n\n  static initializeRipples(): void {\n    Ripple._initilizeRipples(RippleContainersSelector);\n\n    for (let i = 0; i < RippleConfigMap.length; i++) {\n      let rippleConfig = RippleConfigMap[i];\n\n      let selector = rippleConfig.selector;\n\n      if (rippleConfig.subSelector) {\n        selector = [selector, rippleConfig.subSelector].join(' ');\n      }\n\n      Ripple._initilizeRipples(selector, rippleConfig.config);\n    }\n  }\n}\n","\r\n\r\nexport class Snackbar {\r\n  private static readonly _animationEvents = [\"webkitAnimationEnd\", \"oanimationend\", \"msAnimationEnd\", \"animationend\"];\r\n  private static _snackbarQueue: SnackbarDefinition[] = [];\r\n  private static _consuming: boolean;\r\n\r\n  static show(text: string, duration: SnackbarDuration = SnackbarDuration.long, buttonDefinition?: SnackbarButtonDefinition) {\r\n    Snackbar._snackbarQueue.push({\r\n      text: text,\r\n      duration: duration,\r\n      buttonDefinition: buttonDefinition\r\n    });\r\n\r\n    if (!Snackbar._consuming) {\r\n      Snackbar.consumeQueue();\r\n    }\r\n  }\r\n\r\n  private static consumeQueue() {\r\n\r\n    if (Snackbar._snackbarQueue.length) {\r\n      Snackbar._consuming = true;\r\n      Snackbar.showNext();\r\n    }\r\n  }\r\n\r\n  private static showNext() {\r\n    if (Snackbar._snackbarQueue.length) {\r\n      const snackbarDefinition = Snackbar._snackbarQueue[0];\r\n\r\n      Snackbar._snackbarQueue = Snackbar._snackbarQueue.slice(1);\r\n\r\n      const snackbar = Snackbar.createSnackbar();\r\n\r\n      snackbar.appendChild(Snackbar.createSnackbarText(snackbarDefinition.text));\r\n\r\n      if (snackbarDefinition.buttonDefinition) {\r\n        const snackbarButton = Snackbar.createButton(snackbarDefinition.buttonDefinition);\r\n        snackbar.appendChild(snackbarButton);\r\n      }\r\n\r\n      document.body.appendChild(snackbar);\r\n\r\n      setTimeout(() => {\r\n        snackbar.classList.add(\"dismiss\");\r\n        Snackbar.addAnimationEndEvents(snackbar);\r\n\r\n      }, snackbarDefinition.duration);\r\n    } else {\r\n      Snackbar._consuming = false;\r\n    }\r\n  }\r\n\r\n  private static createSnackbar(): HTMLElement {\r\n    const snackbar = document.createElement(\"div\");\r\n    snackbar.className = \"u-snackbar\";\r\n\r\n    return snackbar;\r\n  }\r\n\r\n  private static createSnackbarText(text: string): HTMLElement {\r\n    const snackbarText = document.createElement(\"div\");\r\n    snackbarText.innerText = text;\r\n    snackbarText.className = \"u-snackbar-text\";\r\n\r\n    return snackbarText;\r\n  }\r\n\r\n  private static createButton(buttonDefinition: SnackbarButtonDefinition): HTMLElement {\r\n\r\n    const snackbarButton = document.createElement(\"button\") as HTMLButtonElement;\r\n    snackbarButton.type = \"button\";\r\n    snackbarButton.className = \"u-btn-flat u-btn-secondary\";\r\n    snackbarButton.innerText = buttonDefinition.text;\r\n\r\n    new Ripple(snackbarButton);\r\n\r\n    if (buttonDefinition.action) {\r\n      snackbarButton.addEventListener(\"click\", buttonDefinition.action);\r\n    }\r\n\r\n    return snackbarButton;\r\n  }\r\n\r\n  private static addAnimationEndEvents(snackbar: HTMLElement) {\r\n    Snackbar._animationEvents.forEach(eventName => {\r\n      snackbar.addEventListener(eventName, Snackbar.onAnimationEnd.bind(this));\r\n    });\r\n  }\r\n\r\n  private static onAnimationEnd(event: Event) {\r\n    event.currentTarget.removeEventListener(event.type, Snackbar.onAnimationEnd);\r\n    const element = event.currentTarget as HTMLElement;\r\n\r\n    element.parentNode.removeChild(element);\r\n    Snackbar.showNext();\r\n  }\r\n}\r\n\r\nexport enum SnackbarDuration {\r\n  short = 2500,\r\n  long = 5000\r\n}\r\n\r\nexport class SnackbarDefinition {\r\n  text: string;\r\n  duration: SnackbarDuration;\r\n  buttonDefinition: SnackbarButtonDefinition;\r\n}\r\n\r\nexport class SnackbarButtonDefinition {\r\n  text: string;\r\n  action: EventListener;\r\n}\r\n","interface TabElement extends HTMLElement {\n  index: number;\n}\n\nexport class TabBar {\n\n  private readonly _tabIndicatorElement: HTMLElement;\n  private readonly _tabMap: TabElement[] = [];\n  currentTabIndex: number;\n\n  constructor(private readonly _tabBarElement: HTMLElement) {\n    this._tabIndicatorElement = _tabBarElement.querySelector('.u-tab-indicator');\n    this._setTabInfoMap();\n    this.setActiveTab(0);\n\n    if (window) {\n      window.addEventListener('resize', () => {\n        this._updateTabIndicator();\n      })\n    }\n  }\n\n  setActiveTab(tabIndex: number) {\n    if (!isNaN(this.currentTabIndex)) {\n      this._tabMap[this.currentTabIndex].classList.remove('active');\n    }\n\n    this.currentTabIndex = tabIndex;\n    this._tabBarElement.dispatchEvent(new CustomEvent('tabchange', {\n      detail: {\n        tabIndex: tabIndex\n      }\n    }));\n\n    this._tabMap[this.currentTabIndex].classList.add('active');\n\n    setTimeout(() => this._updateTabIndicator(), 100);\n  }\n\n  recalculateBounds() {\n    this._tabMap.length = 0;\n    this._setTabInfoMap();\n    this._updateTabIndicator();\n  }\n\n  private _updateTabIndicator() {\n    const tab = this._tabMap[this.currentTabIndex];\n    const tabBounds = tab.getBoundingClientRect();\n    const offset = tabBounds.left - this._tabBarElement.getBoundingClientRect().left;\n\n    this._tabIndicatorElement.style.left = offset + 'px';\n    this._tabIndicatorElement.style.width = tabBounds.width + 'px';\n  }\n\n  private _tabClick = (event: Event) => {\n    const tab = event.currentTarget as TabElement;\n    this.setActiveTab(tab.index);\n  }\n\n  private _setTabInfoMap() {\n\n    const tabs = this._tabBarElement.querySelectorAll('.u-tab');\n\n    for (let i = 0; i < tabs.length; i++) {\n      const tab = tabs[i] as TabElement;\n      tab.removeEventListener('click', this._tabClick);\n      tab.addEventListener('click', this._tabClick);\n\n      tab.index = i;\n      this._tabMap.push(tab);\n    }\n  }\n\n  static attach(tabBarElement: HTMLElement): TabBar {\n    return new TabBar(tabBarElement);\n  }\n\n  static initializeTabBars(): void {\n    const tabBars = document.querySelectorAll('.u-tab-bar');\n    for (let i = 0; i < tabBars.length; i++) {\n      const tabBar = tabBars[i] as HTMLElement;\n      TabBar.attach(tabBar);\n    }\n  }\n}\n","export class TextField {\r\n\r\n  element: Element;\r\n  input: HTMLInputElement | HTMLTextAreaElement;\r\n\r\n  constructor(element: Element) {\r\n    const input = element.querySelector('input, textarea, .u-text-input') as HTMLInputElement | HTMLTextAreaElement;\r\n\r\n    if (input) {\r\n      input.addEventListener('focus', () => {\r\n        element.classList.add('focus');\r\n      });\r\n\r\n      input.addEventListener('blur', () => {\r\n        element.classList.remove('focus');\r\n      });\r\n\r\n\r\n      this.element = element;\r\n\r\n      let prototype;\r\n\r\n      if (input.nodeName.toLowerCase() === 'input') {\r\n        prototype = HTMLInputElement.prototype;\r\n      } else if (input.nodeName.toLowerCase() === 'textarea') {\r\n        prototype = HTMLTextAreaElement.prototype;\r\n      }\r\n\r\n      if (!prototype) return;\r\n\r\n      input.addEventListener('input', () => {\r\n        this.setEmpty();\r\n      });\r\n\r\n      const descriptor = Object.getOwnPropertyDescriptor(prototype, 'value');\r\n      const inputSetter = descriptor.set;\r\n      descriptor.set = (val) => {\r\n\r\n        //changing to native setter to prevent the loop while setting the value\r\n        Object.defineProperty(input, \"value\", {set:inputSetter});\r\n        input.value = val;\r\n\r\n        this.setEmpty();\r\n\r\n        //changing back to custom setter\r\n        Object.defineProperty(input, \"value\", descriptor);\r\n      };\r\n\r\n      Object.defineProperty(input, \"value\", descriptor);\r\n\r\n      this.input = input;\r\n\r\n      this.setEmpty();\r\n    }\r\n  }\r\n\r\n  setEmpty() {\r\n    if (this.input.value) {\r\n      this.element.classList.remove('empty')\r\n    } else {\r\n      this.element.classList.add('empty')\r\n    }\r\n  }\r\n\r\n  static initializeTextFields(): void {\r\n    const textFields = document.querySelectorAll('.u-text-field');\r\n    for (let i = 0; i < textFields.length; i++) {\r\n      const textField = textFields[i];\r\n      new TextField(textField);\r\n    }\r\n  }\r\n}\r\n"]}