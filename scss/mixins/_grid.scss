@use "sass:math";

@mixin make-margins($margins: $margins-and-gutters, $breakpoints: $grid-breakpoints) {
  @each $breakpoint in map-keys($breakpoints) {
    $infix: breakpoint-infix($breakpoint, $breakpoints);

    @include media-breakpoint-up($breakpoint, $breakpoints) {
      @each $margin, $value in $margins {
        .u-margin#{$infix}-#{$margin} {
          --u-container-margin: #{$value};
        }
      }
    }
  }
}

@mixin make-gutters($gutters: $margins-and-gutters, $breakpoints: $grid-breakpoints) {
  @each $breakpoint in map-keys($breakpoints) {
    $infix: breakpoint-infix($breakpoint, $breakpoints);

    @include media-breakpoint-up($breakpoint, $breakpoints) {
      @each $gutter, $value in $gutters {
        .u-gutter#{$infix}-#{$gutter} {
          --u-container-gutter: #{$value};
        }
      }
    }
  }
}

@mixin make-row() {
  display: flex;
  flex-wrap: wrap;
  margin-right: calc(var(--u-container-gutter) / -2);
  margin-left: calc(var(--u-container-gutter) / -2);
}

@mixin make-col($size, $columns: $grid-columns) {
  flex: 0 0 percentage(math.div($size, $columns));
  // Add a `max-width` to ensure content within each column does not blow out
  // the width of the column. Applies to IE10+ and Firefox. Chrome and Safari
  // do not appear to require this.
  max-width: percentage(math.div($size, $columns));
}

@mixin make-col-offset($size, $columns: $grid-columns) {
  $num: math.div($size, $columns);
  margin-left: if($num == 0, 0, percentage($num));
}
