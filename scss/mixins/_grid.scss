@mixin make-margins($margins: $margins-and-gutters, $breakpoints: $grid-breakpoints) {
  .u-container {
    @each $breakpoint in map-keys($breakpoints) {
      $infix: breakpoint-infix($breakpoint, $breakpoints);

      @include media-breakpoint-up($breakpoint, $breakpoints) {
        @each $margin, $value in $margins {
          &.u-margin#{$infix}-#{$margin} {
            padding-right: $value;
            padding-left: $value;
          }
        }
      }
    }
  }
}

@mixin make-row() {
  display: flex;
  flex-wrap: wrap;
  margin-right: ($grid-gutter-width / -2);
  margin-left: ($grid-gutter-width / -2);
}

@mixin make-gutters($gutters: $margins-and-gutters, $breakpoints: $grid-breakpoints) {
  .u-row {
    @each $breakpoint in map-keys($breakpoints) {
      $infix: breakpoint-infix($breakpoint, $breakpoints);

      @include media-breakpoint-up($breakpoint, $breakpoints) {
        @each $gutter, $value in $gutters {
          &.u-gutter#{$infix}-#{$gutter} {
            margin-right: ($value / -2);
            margin-left: ($value / -2);

            > .u-col, >[class^=u-col-] {
              padding-right: ($value / 2);
              padding-left: ($value / 2);
            }
          }
        }
      }
    }
  }
}

@mixin make-col($size, $columns: $grid-columns) {
  flex: 0 0 percentage($size / $columns);
  // Add a `max-width` to ensure content within each column does not blow out
  // the width of the column. Applies to IE10+ and Firefox. Chrome and Safari
  // do not appear to require this.
  max-width: percentage($size / $columns);
}

@mixin make-col-offset($size, $columns: $grid-columns) {
  $num: $size / $columns;
  margin-left: if($num == 0, 0, percentage($num));
}
