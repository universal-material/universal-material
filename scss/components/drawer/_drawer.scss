@import "variables";
@import "../../animations";
@import "../../colors";
@import "../../grid/variables";
@import "../../zindex";
@import "../../mixins";

:root {
  --u-drawer-sidebar-width: #{$u-drawer-sidebar-width};
}

.u-drawer-backdrop {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: $zindex-sidebar - 1;
  pointer-events: none;
  content: "";
  background-color: $u-drawer-backdrop-bg;
  opacity: 0;
  transition: opacity 375ms linear, z-index 0ms 375ms;
}

.u-drawer-content {
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  z-index: $zindex-sidebar;
  flex-shrink: 0;
  background: var(--u-surface-elevation-tint-1);
  width: var(--u-drawer-sidebar-width);
  max-width: 85%;
  overflow-y: auto;
  transition: transform 375ms $awesome-cubic-bezier;
  transform: translateX(-100%);
}

.u-drawer {

  &.open {

    .u-drawer-content {
      @include u-elevation-shadow(2);
    }

    > .u-drawer-backdrop {
      pointer-events: auto;
      opacity: $u-drawer-backdrop-opacity;
      transition: opacity 375ms linear;
    }

    &,
    &.u-drawer-end {
      .u-drawer-content {
        transform: translateX(0);
      }
    }
  }

  &.u-drawer-end {
    .u-drawer-content {
      right: 0;
      left: auto;
      transform: translateX(100%);
    }
  }
}

.rtl,
[dir="rtl"] {
  .u-drawer-content {
    right: 0;
    left: auto;
    transform: translateX(100%);
  }

  .u-drawer {
    .u-toolbar-fixed {
      right: var(--u-drawer-sidebar-width);
      left: 0;
    }
  }

  &.u-drawer-end {
    &.u-drawer-content {
      right: auto;
      left: 0;
      transform: translateX(100%);
    }
  }
}

@each $breakpoint in map-keys($grid-breakpoints) {
  $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

  @include media-breakpoint-up($breakpoint) {
    .u-drawer#{$infix}-permanent,
    .u-drawer#{$infix}-dismissible {
      padding-left: var(--u-drawer-sidebar-width);

      &,
      &.u-drawer-end {
        .u-drawer-content {
          @include u-elevation-shadow(0);
          transform: none;
        }
      }

      > .u-drawer-backdrop {
        display: none;
      }

      .u-toolbar-fixed {
        left: var(--u-drawer-sidebar-width);
      }

      &.u-drawer-end {
        padding-right: var(--u-drawer-sidebar-width);
        padding-left: 0;

        .u-toolbar-fixed {
          right: var(--u-drawer-sidebar-width);
          left: 0;
        }
      }
    }

    .u-drawer#{$infix}-dismissible {
      transition: padding-left 375ms $awesome-cubic-bezier;

      .u-toolbar-fixed {
        transition: left 375ms $awesome-cubic-bezier, background-color 200ms;
        will-change: left;
      }

      &.u-drawer-end {
        .u-toolbar-fixed {
          transition: right 375ms $awesome-cubic-bezier, background-color 200ms;
          will-change: right;
        }
      }

      &.dismiss {
        padding-left: 0;

        .u-drawer-content {
          transform: translateX(-100%);
        }

        .u-toolbar-fixed {
          left: 0;
        }

        &.u-drawer-end {
          padding-right: 0;

          .u-drawer-content {
            transform: translateX(100%);
          }

          .u-toolbar-fixed {
            right: 0;
          }
        }
      }
    }

    .rtl {
      .u-drawer#{$infix}-permanent,
      .u-drawer#{$infix}-dismissible,
      &.u-drawer#{$infix}-permanent,
      &.u-drawer#{$infix}-dismissible {
        padding-right: var(--u-drawer-sidebar-width);
        padding-left: 0;
      }

      .u-drawer#{$infix}-dismissible,
      &.u-drawer#{$infix}-dismissible {
        transition: padding-right 375ms $awesome-cubic-bezier;

        .u-toolbar-fixed {
          transition: right 375ms $awesome-cubic-bezier;
          will-change: right;
        }

        &.dismiss {
          padding-right: 0;
          padding-left: 0;

          .u-drawer-content {
            transform: translateX(100%);
          }

          .u-toolbar-fixed {
            right: 0;
          }
        }
      }
    }
  }
}
