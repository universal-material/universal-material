@import "variables";
@import "../../typography/variables";
@import "../../elevation";
@import "../../mixins";
@import "uwp-buttons";

.u-btn {
  @include umd-typography(button);
  position: relative; //Universal Material custom code
  display: inline-flex;
  align-items: center;
  justify-content: center;
  height: $u-btn-height; //Universal Material custom code
  padding: 0 $u-btn-side-padding; //Universal Material custom code
  overflow: hidden;
  font-family: $u-font-family-base;
  line-height: $u-btn-material-line-height;
  color: inherit;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  cursor: pointer;
  box-sizing: border-box;
  user-select: none;
  background: transparent; //Universal Material custom code
  border: none; //Universal Material custom code
  border-radius: $u-btn-border-radius; //Universal Material custom code

  @include selectable-background-before();

  // Share hover and focus styles
  @include hover-focus {
    text-decoration: none;
  }


  &:focus,
  &.focus {
    outline: 0;
    //box-shadow: $u-btn-focus-box-shadow;
  }

  &:active,
  &.active {
    background-image: none;
    //@include box-shadow($u-btn-focus-box-shadow, $u-btn-active-box-shadow);
  }

  &.disabled,
  &:disabled {
    cursor: default;
  }
}

.u-btn-set {
  display: inline-flex;

  .u-btn + .u-btn {
    margin-left: $u-btn-set-margin;
  }
}

.u-btn-flat,
.u-btn-solid {
  @extend .u-btn;
}

.u-btn-outline {
  @extend .u-btn-flat;
  border: $u-btn-outline-border-width solid currentColor;
}

.u-btn-raised {
  @extend .u-btn-solid;

  @include elevate("2dp");

  &:active {
    @include elevate("4dp");
  }

  transition: box-shadow 250ms;
}

.u-btn-icon {
  display: inline-block;
  width: $u-btn-icon-size;
  height: $u-btn-icon-size;
  margin-right: $u-btn-icon-margin-end;
  margin-left: $u-btn-icon-margin-start;
  font-size: $u-btn-icon-size;
  line-height: 1em;
}

.u-btn-icon-end {
  margin-right: $u-btn-icon-margin-start;
  margin-left: $u-btn-icon-margin-end;
}

.u-btn-borderless {
  @extend .u-btn;

  width: $u-btn-borderless-size;
  height: $u-btn-borderless-size;
  padding: 0;
  overflow: visible;
  border-radius: 50%;

  .u-btn-icon {
    width: $u-btn-borderless-icon-size;
    height: $u-btn-borderless-icon-size;
    margin: 0;
    font-size: $u-btn-borderless-icon-size;
  }
}

.u-btn-floating {
  @extend .u-btn-raised;
  width: $u-btn-floating-size;
  height: $u-btn-floating-size;
  border-radius: 50%;

  .u-btn-icon {
    width: $u-btn-borderless-icon-size;
    height: $u-btn-borderless-icon-size;
    margin: 0;
    font-size: $u-btn-borderless-icon-size;
  }
}

.u-btn-floating-extended {
  width: auto;
  height: $u-btn-floating-extended-height;
  padding-right: $u-btn-floating-extended-padding;
  padding-left: $u-btn-floating-extended-padding;
  border-radius: $u-btn-floating-extended-border-radius;

  .u-btn-icon {
    margin-right: $u-btn-floating-extended-icon-margin;
    margin-left: $u-btn-floating-extended-icon-margin - $u-btn-floating-extended-padding;
  }
}

.u-btn-floating-sm {
  width: $u-btn-floating-small-size;
  height: $u-btn-floating-small-size;
}

.dense {
  @at-root .dense-layout .u-btn,
  &.u-btn {
    height: $u-btn-dense-size;
    font-size: $u-btn-dense-font-size;
  }

  @at-root .dense-layout .u-btn-borderless,
  &.u-btn-borderless {
    width: $u-btn-dense-size;
    font-size: $base-dense-icon-size;
  }

  @at-root .dense-layout .u-btn-icon,
  &.u-btn-icon {
    font-size: $u-btn-icon-dense-size;
  }
}

.rtl,
[dir="rtl"] {
  .u-btn-floating-extended {
    .u-btn-icon {
      margin-right: $u-btn-floating-extended-icon-margin - $u-btn-floating-extended-padding;
      margin-left: $u-btn-floating-extended-icon-margin;
    }
  }

  .u-btn-set {
    .u-btn + .u-btn {
      margin-left: 0;
      margin-right: $u-btn-set-margin;
    }
  }
}

@mixin button-flat-theme($buttons-colors, $dark-theme) {

  @each $color, $value in map-merge($buttons-colors, (default: inherit)) {
    .u-btn-flat.u-btn-#{$color} {
      @include button-flat-variant($value);
    }
  }
}

@mixin button-borderless-theme($buttons-colors, $dark-theme) {

  $u-btn-borderless-color: $u-btn-borderless-color-light-theme;
  $u-btn-disabled-color: $u-btn-disabled-color-light-theme;

  @if ($dark-theme) {
    $u-btn-borderless-color: $u-btn-borderless-color-dark-theme;
    $u-btn-disabled-color: $u-btn-disabled-color-dark-theme;
  }

  @each $color, $value in map-merge($buttons-colors, (default: $u-btn-borderless-color)) {
    .u-btn-borderless.u-btn-#{$color} {
      @include button-flat-variant($value);
    }
  }

  .u-btn-borderless {
    &:disabled,
    &.disabled {
      color: $u-btn-disabled-color !important;
    }
  }
}

@mixin buttons-theme($theme) {

  $theme-colors: map-get($theme, "colors");
  $dark-theme: map-get($theme, "dark");
  $uwp-style: map-get($theme, "uwp-style");

  $buttons-colors: (
    default: $u-btn-default-background-light,
    primary: map-get($theme-colors, "primary"),
    primary-variant: map-get($theme-colors, "primary-variant"),
    secondary: map-get($theme-colors, "secondary"),
    secondary-variant: map-get($theme-colors, "secondary-variant"),
    danger: map-get($theme-colors, "danger")
  );

  $u-btn-disabled-color: $u-btn-disabled-color-light-theme;
  $u-btn-disabled-background-color: $u-btn-disabled-background-light-theme;
  $u-btn-flat-default-color: $body-color-light-theme;
  $u-btn-borderless-color: $u-btn-borderless-color-light-theme;
  $u-btn-outline-gray-border-color: $u-btn-outline-gray-border-color-light-theme;

  @if ($dark-theme) {
    $buttons-colors: map-merge($buttons-colors, (default: $u-btn-default-background-dark));
    $u-btn-disabled-color: $u-btn-disabled-color-dark-theme;
    $u-btn-disabled-background-color: $u-btn-disabled-background-dark-theme;
    $u-btn-flat-default-color: $body-color-dark-theme;
    $u-btn-borderless-color: $u-btn-borderless-color-dark-theme;
    $u-btn-outline-gray-border-color: $u-btn-outline-gray-border-color-dark-theme;
  }

  @each $color, $value in $buttons-colors {
    .u-btn-solid.u-btn-#{$color} {
      @include button-solid-variant($value);
    }
  }

  .u-btn {
    &.disabled,
    &:disabled {
      color: $u-btn-disabled-color !important;
      background-color: $u-btn-disabled-background-color;
      box-shadow: none;

      &::before {
        background-color: transparent !important;
      }
    }
  }

  .u-btn-borderless,
  .u-btn-flat {
    &.disabled,
    &:disabled {
      &,
      &::before {
        background-color: transparent;
      }
    }
  }

  .u-btn-outline-gray-border {
    border-color: $u-btn-outline-gray-border-color;
  }

  @include button-flat-theme($buttons-colors, $dark-theme);
  @include button-borderless-theme($buttons-colors, $dark-theme);

  @if ($uwp-style) {
    @include uwp-button($dark-theme);
  }
}
