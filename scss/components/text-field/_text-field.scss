@use "sass:math";

@import "variables";

:root {
  --u-label-input-start: auto;
  --u-label-input-span-leading-offset: 0;
  --u-label-input-span-trailing-offset: 0;
}

.u-form-field-selection {
  .u-text-field {
    cursor: pointer;
  }
}

.u-form-field {
  margin-bottom: $u-form-field-margin;

  &,
  & * {
    box-sizing: border-box;
  }

  &.u-form-field-selection {
    .u-text-field.focus {
      .u-text-field-state {
        &::before {
          opacity: var(--u-focus-state-layer-opacity);
        }
      }
    }
  }

  &:not(.u-form-field-selection) {
    .u-text-field.focus {
      .u-text-field-state {
        pointer-events: none;
      }
    }
  }
}

.u-text-field-supporting-text {
  @include umd-typography(body-s);

  display: flex;
  margin-top: $u-text-field-supporting-text-margin;
  padding-inline: $u-text-input-padding;
  overflow: hidden;
  color: var(--u-on-surface-variant-color)
}

.u-text-field-supporting-text-item {
  flex-shrink: 0;

  + .u-text-field-supporting-text-item {
    padding-inline-start: $u-text-input-padding;
  }
}

.u-text-field-state {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: inherit;

  &::before {
    display: block;
    width: 100%;
    height: 100%;
    border-radius: inherit;
    content: '';
    background-color: var(--u-on-surface-color);
    opacity: 0;
    transition: 200ms opacity;
  }
}

.u-text-field {
  position: relative;
  display: grid;
  align-items: center;
  grid-template-columns: calc(#{$u-text-field-icon-size} + #{$u-text-field-icon-margin}) auto calc(#{$u-text-field-icon-size} + #{$u-text-field-icon-margin});
  grid-template-rows: $u-text-field-label-line-height auto;
  min-height: $u-text-field-box-height;
  padding-top: $u-text-field-box-vertical-padding;
  padding-bottom: $u-text-field-box-vertical-padding;
  font-family: $u-font-family-base;
  cursor: text;

  //&::before,
  &::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
  }

  &::after {
    border-width: $u-text-field-border-width;
    border-color: var(--u-on-surface-variant-color);
  }

  &.focus {
    &::after {
      border-width: $u-text-field-focus-border-width;
      border-color: var(--u-primary-color);
    }

    .u-text-field-label {
      color: var(--u-primary-color);
    }
  }

  &.invalid {
    &::after  {
      border-color: var(--u-error-color);
    }

    .u-text-input,
    .u-text-field-label,
    ~ .u-text-field-supporting-text,
    .u-text-field-trailing-icon {
      color: var(--u-error-color);
    }
  }

  &.disabled {
    cursor: default;

    &::after  {
      border-color: var(--u-on-surface-color);
      opacity: var(--u-disabled-state-opacity);
    }

    .u-text-input,
    .u-text-field-label,
    ~ .u-text-field-supporting-text,
    .u-text-field-leading-icon,
    .u-text-field-trailing-icon {
      color: var(--u-on-surface-color);
      opacity: var(--u-disabled-state-opacity);
    }
  }
}

.u-text-field-leading-icon,
.u-text-field-trailing-icon {
  width: $u-text-field-icon-size;
  height: $u-text-field-icon-size;
  font-size: $u-text-field-icon-size;
  color: var(--u-on-surface-variant-color);
  line-height: 1em;
  text-align: center;

  .u-icon-btn {
    margin-top: math.div(-($u-icon-btn-size - $u-text-field-icon-size), 2);
    margin-left: math.div(-($u-icon-btn-size - $u-text-field-icon-size), 2);
  }
}

.u-text-field-leading-icon {
  grid-area: 1 / 1 / span 2;
  justify-self: flex-end;
}

.u-text-field-trailing-icon {
  grid-area: 1 / 3 / span 2;
  justify-self: flex-start;
}

.u-text-input {
  padding-inline: $u-text-input-padding !important;
  grid-area: 2 / var(--u-label-input-start) / auto / span calc(3 - var(--u-label-input-span-leading-offset) - var(--u-label-input-span-trailing-offset));

  button.u-dropdown-toggle {
    border: none;
    outline: 0;
    background: transparent;
    padding: 0;
    width: 100%;
    display: block;
    text-align: start;
  }
}

.u-text-input::placeholder,
.u-text-input input::placeholder,
.u-text-input textarea::placeholder,
.u-text-input-placeholder {
  color: var(--u-on-surface-variant-color);
}

.u-text-input input,
.u-text-input textarea,
input.u-text-input,
textarea.u-text-input,
button.u-text-input,
.u-text-input-value {
  @include umd-typography(body-l);
  line-height: $u-text-input-line-height;
  background: transparent;
  border: none;
  color: var(--u-on-surface-color);
  width: 100%;
  padding: 0;

  &:focus {
    outline: 0;
  }
}

.u-text-field-label {
  @include umd-typography(body-l);

  padding-inline: $u-text-label-padding;
  position: absolute;
  top: 0;
  left: $u-text-label-left;
  margin-bottom: 0;
  line-height: $u-text-field-label-line-height;
  grid-area: 1 / var(--u-label-input-start) / auto / span calc(3 - var(--u-label-input-span-leading-offset) - var(--u-label-input-span-trailing-offset));
  color: var(--u-on-surface-variant-color);
  transition: top 200ms, left 200ms, font-size 200ms;
}

.u-text-field.focus,
.u-text-field:not(.empty) {
  label,
  .u-text-field-label {
    @include umd-typography(body-s);
  }
}


.u-text-field-leading-icon ~ .u-text-field-label,
.u-text-field-leading-icon ~ .u-text-input {
  --u-label-input-start: 2;
  --u-label-input-span-leading-offset: 1;
}


.u-text-field-trailing-icon ~ .u-text-field-label,
.u-text-field-trailing-icon ~ .u-text-input {
  --u-label-input-span-trailing-offset: 1;
}

.u-text-field-box,
.u-text-field-outlined {

  &.empty:not(.focus):not(.u-text-field-hidden-label) {
    .u-text-field-label {
      pointer-events: none;
      top: math.div($u-text-field-label-line-height + $u-text-input-line-height, 2) - math.div($u-text-field-label-line-height, 2)
    }

    .u-text-input::placeholder,
    .u-text-input-placeholder {
      color: transparent;
      transition: color 150ms 100ms;
    }

    .u-text-input {
      opacity: 0;
      transition: opacity 150ms 100ms;
    }
  }
}

.u-text-field-box {
  border-radius: $u-text-field-box-border-radius;
  background-color: var(--u-surface-variant-color);

  //&::before {
  //  //background-color: var(--u-surface-variant-color);
  //  border-radius: $u-text-field-box-border-radius;
  //}

  &::after {
    border-bottom-style: solid;
  }

  &.disabled {
    background-color: hsla(var(--u-on-surface-hsl-color) / $u-disabled-container-opacity);
    //&::before  {
    //  background-color: var(--u-on-surface-color);
    //  opacity: .04;
    //}
  }
}

.u-text-field-outlined {
  border-radius: $u-text-field-outline-border-radius;

  &::after {
    border-radius: $u-text-field-outline-border-radius;
    border-style: solid;
  }

  .u-text-field-label,
  .u-text-input {
    grid-area: 1 / var(--u-label-input-start) / span 2 / span calc(3 - var(--u-label-input-span-leading-offset) - var(--u-label-input-span-trailing-offset));
  }

  .u-text-field-label {
    background-color: var(--u-current-bg-color);
  }

  &.focus,
  &:not(.empty) {
    .u-text-field-label {
      top: calc(#{-$u-text-field-box-vertical-padding} - #{math.div($u-text-field-label-line-height, 2)});
    }

    .u-text-field-leading-icon ~ .u-text-field-label {
      left: -$u-text-field-icon-size;
    }
  }

  .u-text-input {
    height: $u-text-field-label-line-height + $u-text-input-line-height;
  }
}

.u-text-field-hidden-label {
  grid-template-rows: auto;

  .u-text-field-leading-icon {
    grid-area: 1 / 1;
    justify-self: flex-end;
  }

  .u-text-field-trailing-icon {
    grid-area: 1 / 3;
  }

  .u-text-input {
    padding-inline: $u-text-input-padding !important;
    grid-area: 1 / var(--u-label-input-start) / auto / span calc(3 - var(--u-label-input-span-leading-offset) - var(--u-label-input-span-trailing-offset));
  }

  .u-text-field-label {
    height: 0;
    overflow: hidden;
  }
}

.u-search-field {
  @extend .u-text-field-hidden-label;
  border-radius: $u-search-field-border-radius;

  &::before {
    border-radius: $u-search-field-border-radius;
  }

  &::after {
    display: none;
  }
}
