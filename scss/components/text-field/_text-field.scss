@import "variables";

.text-field-container {
  display: flex;
  flex-direction: column;
  margin-bottom: $text-field-container-margin;
}

.text-field-helper-text {
  position: relative;
  margin-top: $text-field-helper-text-margin;
  overflow: hidden;
  font-size: $text-field-helper-text-font-size;
  line-height: $text-field-helper-text-line-height;
}

.text-field-helper-text-invalid {
  position: absolute;
  top: 0;
  right: 0;
  left: 0;

  &:only-child {
    position: static;
    display: none;
  }
}

.text-field-helper-text-default,
.text-field-helper-text-invalid {
  display: inline-block;
}

.text-field-helper-text-default:not(:only-child),
.text-field-helper-text-invalid {
  opacity: 0;
  transition: transform 1ms 200ms, opacity 150ms;
  transform: translate3d(0, -100%, 0);
}

.text-field:not(.invalid) ~ .text-field-helper-text .text-field-helper-text-default,
.text-field.invalid ~ .text-field-helper-text .text-field-helper-text-invalid {
  opacity: 1;
  transition: transform 200ms, opacity 150ms;
  transform: translate3d(0, 0, 0);

  &:only-child {
    display: inline-block;
  }
}

.text-field-leading-icon,
.text-field-trailing-icon {
  position: absolute;
  bottom: $text-field-icon-bottom;
  width: 1em;
  height: 1em;
  margin-bottom: -.5em;
  font-size: $text-field-icon-size;
  line-height: 1em;
  text-align: center;
}

.text-field-leading-icon {
  left: 0;

  ~ .text-input {
    padding-left: $text-input-padding + $text-field-icon-size;
  }
}

.text-field-trailing-icon {
  right: 0;

  ~ .text-input {
    padding-right: $text-input-padding + $text-field-icon-size;
  }
}

.text-input {
  box-sizing: content-box;
  padding-top: $text-input-padding;
  padding-bottom: $text-input-padding - $text-field-border-width;
  font-size: $text-input-font-size;
  line-height: $text-input-line-height;
  background: transparent;
  border: none;
  border-bottom: $text-input-border;
  border-radius: inherit;

  &:not(textarea) {
    height: $text-input-height;
  }

  &:focus {
    outline: 0;
  }
}

.text-field {
  position: relative;
  display: flex;
  flex-direction: column-reverse;

  label {
    align-self: flex-start;
    height: $text-field-label-height;
    margin-bottom: $text-field-label-margin;
    font-size: $text-field-label-font-size;
    line-height: $text-field-label-line-height;
  }

  &::before {
    position: absolute;
    right: 0;
    bottom: 0;
    left: 0;
    height: $text-field-focus-border-width;
    pointer-events: none;
    content: "";
    border-bottom: $text-field-focus-border-width solid currentColor;
    transition: transform 350ms $awesome-cubic-bezier;
    transform: scale3d(0, 1, 1);
    will-change: transform;
  }

  &.focus,
  &.invalid {

    label {
      color: currentColor;
    }

    &::before {
      transform: scale3d(1, 1, 1);
    }
  }
}

.text-field.text-field-floating-label,
.text-field-box,
.text-field-outline {
  label {
    transition: transform 200ms, font-size 200ms;
  }

  .text-input::placeholder {
    transition: color 150ms;
  }

  &.empty:not(.focus) {
    label {
      font-size: $text-input-font-size;
      pointer-events: none;
      transform: translate3d(0, ($text-field-label-height / 2) + $text-field-label-margin + ($text-input-height / 2) + $text-input-padding, 0);
    }

    .text-input::placeholder {
      color: transparent;
      transition: color 150ms 100ms;
    }
  }
}

.text-field-box {
  border-radius: $text-field-box-border-radius;

  label {
    height: $text-field-box-label-height;
    padding-left: $text-field-box-padding;
    margin-bottom: 0;
    line-height: $text-field-box-label-line-height;
  }

  .text-input {
    padding: $text-field-box-label-height $text-field-box-padding calc(#{$text-field-box-padding} - #{$text-field-border-width});
    margin-top: -$text-field-box-label-height;
  }

  &.empty:not(.focus) {
    label {
      transform: translate3d(0, ($text-field-box-height / 2) - (1.75rem / 2), 0) !important;
    }
  }

  ~ .text-field-helper-text {
    margin-right: $text-field-box-padding;
    margin-left: $text-field-box-padding;
  }

  .text-field-leading-icon,
  .text-field-trailing-icon {
    bottom: 50%;
  }

  .text-field-leading-icon {
    left: $text-field-icon-margin;

    ~ .text-input,
    ~ label {
      padding-left: calc(#{$text-field-icon-margin + $text-field-box-padding} + #{$text-field-icon-size});
    }
  }

  .text-field-trailing-icon {
    right: $text-field-icon-margin;

    ~ .text-input,
    ~ label {
      padding-right: calc(#{$text-field-icon-margin + $text-field-box-padding} + #{$text-field-icon-size});
    }
  }
}

.text-field-outline {
  label {
    height: $text-field-outline-label-height;
    padding-right: $text-field-outline-label-padding;
    padding-left: $text-field-outline-label-padding;
    margin-bottom: 0;
    margin-left: $text-field-outline-padding - $text-field-outline-label-padding;
    line-height: $text-field-outline-label-line-height;
    transform: translate3d(0, -$text-field-outline-label-height / 2, 0);
  }

  .text-input {
    padding: $text-field-outline-label-height $text-field-outline-padding calc(#{$text-field-outline-padding-bottom} - #{$text-field-border-width});
    margin-top: -$text-field-outline-label-height;
    border-color: transparent !important;
  }

  &.empty:not(.focus) {
    label {
      transform: translate3d(0, ($text-field-outline-height / 2) - ($text-field-outline-label-height / 2), 0) !important;
    }

    .text-field-leading-icon ~ label {
      transform: translate3d(calc(#{$text-field-icon-margin} + #{$text-field-icon-size}), ($text-field-outline-height / 2) - ($text-field-outline-label-height / 2), 0) !important;
    }
  }

  &::before {
    top: 0;
    height: auto;
    border: $text-field-border-width solid;
    border-radius: $text-field-outline-border-radius;
    transition: none;
    transform: none;
  }

  &.focus,
  &.invalid {
    &::before {
      border-width: $text-field-focus-border-width;
    }
  }

  ~ .text-field-helper-text {
    margin-right: $text-field-outline-padding;
    margin-left: $text-field-outline-padding;
  }

  .text-field-leading-icon,
  .text-field-trailing-icon {
    bottom: 50%;
  }

  .text-field-leading-icon {
    left: $text-field-icon-margin;

    ~ .text-input {
      margin-left: calc(#{$text-field-icon-margin} + #{$text-field-icon-size});
    }
  }

  .text-field-trailing-icon {
    right: $text-field-icon-margin;

    ~ .text-input,
    ~ label {
      margin-right: calc(#{$text-field-icon-margin} + #{$text-field-icon-size});
    }
  }
}

.text-field-elevated {
  border-radius: $text-field-elevated-border-radius;
  box-shadow: $text-field-elevated-box-shadow;

  &::before {
    content: none;
  }

  .text-field-leading-icon,
  .text-field-trailing-icon {
    bottom: 50%;
  }

  .text-input {
    padding: $text-field-elevated-padding;
    border: none;
  }

  .text-field-leading-icon {
    left: $text-field-icon-margin;

    ~ .text-input {
      margin-left: calc(#{$text-field-icon-margin} + #{$text-field-icon-size});
    }
  }

  .text-field-trailing-icon {
    right: $text-field-icon-margin;

    ~ .text-input,
    ~ label {
      margin-right: calc(#{$text-field-icon-margin} + #{$text-field-icon-size});
    }
  }
}

.text-area-outline {
  @extend .text-field-outline;

  label {
    background: transparent !important;
    transform: translate3d(0, 0, 0);
  }
}

@mixin text-fields-theme($theme) {

  $theme-colors: map-get($theme, "colors");
  $dark-theme: map-get($theme, "dark");
  $uwp-style: map-get($theme, "uwp-style");

  $primary-color: map-get($theme-colors, "primary");
  $danger-color: map-get($theme-colors, "danger");

  $text-field-label-color: $text-field-label-color-light-theme;
  $text-field-divider-color: $text-field-divider-color-light-theme;
  $text-field-divider-color-hover: $text-field-divider-color-hover-light-theme;
  $text-field-divider-color-disabled: $text-field-divider-color-disabled-light-theme;
  $text-field-box-background: $text-input-box-bg-light-theme;
  $text-field-elevated-background: $text-field-elevated-bg-light-theme;
  $text-input-color: $text-input-color-light-theme;
  $text-input-placeholder-color: $text-input-placeholder-color-light-theme;
  $text-input-disabled-color: $text-input-disabled-color-light-theme;
  $text-input-icon-color: $text-input-icon-color-light-theme;
  //$text-input-affix-color: $text-input-affix-color-light-theme;
  $text-field-helper-text-color: $text-field-helper-text-color-light-theme;
  $text-field-outline-label-background: $bg-light;

  @if ($dark-theme) {
    $text-field-label-color: $text-field-label-color-dark-theme;
    $text-field-divider-color: $text-field-divider-color-dark-theme;
    $text-field-divider-color-hover: $text-field-divider-color-hover-dark-theme;
    $text-field-divider-color-disabled: $text-field-divider-color-disabled-dark-theme;
    $text-field-box-background: $text-input-box-bg-dark-theme;
    $text-field-elevated-background: $text-field-elevated-bg-dark-theme;
    $text-input-color: $text-input-color-dark-theme;
    $text-input-placeholder-color: $text-input-placeholder-color-dark-theme;
  //  $text-input-disabled-color: $text-input-disabled-color-dark-theme;
    $text-input-icon-color: $text-input-icon-color-dark-theme;
  //  $text-input-affix-color: $text-input-affix-color-dark-theme;
    $text-field-helper-text-color: $text-field-helper-text-color-dark-theme;
    $text-field-outline-label-background: $bg-dark;
  }

  .text-field-leading-icon,
  .text-field-trailing-icon {
    color: $text-input-icon-color;
  }

  .text-field {
    label {
      color: $text-field-label-color;
    }

    &.focus {
      color: $primary-color;
    }

    &.invalid,
    &.invalid .text-field-leading-icon,
    &.invalid .text-field-trailing-icon,
    & ~ .text-field-helper-text .text-field-helper-text-invalid {
      color: $danger-color;
    }

    &:hover {
      .text-input:not(:disabled) {
        border-color: $text-field-divider-color-hover;
      }
    }
  }

  .text-field-box {
    background: $text-field-box-background;
  }

  .text-field-outline {
    label {
      background: $text-field-outline-label-background;
    }

    &:not(.focus):not(.invalid) {
      &::before {
        border-color: $text-field-divider-color;
      }

      &:hover::before {
        border-color: $text-field-divider-color-hover;
      }
    }
  }

  .text-field-elevated {
    background: $text-field-elevated-background;
  }

  .text-input {
    color: $text-input-color;
    border-color: $text-field-divider-color;

    &:disabled {
      color: $text-input-disabled-color;
      border-color: $text-field-divider-color-disabled;
    }
  }

  .text-field-helper-text {
    color: $text-field-helper-text-color;
  }

  .text-input::placeholder,
  .text-input-placeholder {
    color: $text-input-placeholder-color;
  }
}

