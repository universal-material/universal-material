@import "variables";
@import "../../animations";
@import "../../colors";
@import "../../grid/variables";
@import "../../zindex";
@import "../../mixins";

.u-drawer-backdrop {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: -1;
  content: "";
  background-color: $u-drawer-backdrop-bg;
  opacity: 0;
  transition: opacity 375ms linear, z-index 0ms 375ms;
}

.u-drawer-content {
  @include u-elevation(2);
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  z-index: $zindex-sidebar;
  flex-shrink: 0;
  width: $u-drawer-sidebar-width;
  max-width: 85%;
  overflow-y: auto;
  transition: transform 375ms $awesome-cubic-bezier;
  transform: translateX(-100%);
}

.u-drawer {

  &.open {
    .u-drawer-content {
      transform: translateX(0);
    }

    .u-drawer-backdrop {
      z-index: $zindex-sidebar - 1;
      opacity: $u-drawer-backdrop-opacity;
      transition: opacity 375ms linear;
    }
  }
}

.rtl {
  .u-drawer-content {
    right: 0;
    left: auto;
    transform: translateX(100%);
  }
}

@each $breakpoint in map-keys($grid-breakpoints) {
  $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

  @include media-breakpoint-up($breakpoint) {
    .u-drawer#{$infix}-permanent,
    .u-drawer#{$infix}-dismissible {
      padding-left: $u-drawer-sidebar-width;

      .u-drawer-content {
        @include u-elevation(0);
        transform: none;
      }

      .u-drawer-backdrop {
        display: none;
      }
    }

    .u-drawer#{$infix}-dismissible {
      transition: padding-left 375ms $awesome-cubic-bezier;

      &.dismiss {
        padding-left: 0;

        .u-drawer-content {
          transform: translateX(-100%);
        }
      }
    }

    .rtl {
      .u-drawer#{$infix}-permanent,
      .u-drawer#{$infix}-dismissible,
      &.u-drawer#{$infix}-permanent,
      &.u-drawer#{$infix}-dismissible {
        padding-right: $u-drawer-sidebar-width;
        padding-left: 0;
      }

      .u-drawer#{$infix}-dismissible,
      &.u-drawer#{$infix}-dismissible {
        transition: padding-right 375ms $awesome-cubic-bezier;

        &.dismiss {
          padding-right: 0;
          padding-left: 0;

          .u-drawer-content {
            transform: translateX(100%);
          }
        }
      }
    }
  }
}

@mixin sidebar-theme($theme) {

  $theme-colors: map-get($theme, "colors");
  $dark-theme: map-get($theme, "dark");
  $primary-color: map-get($theme-colors, "primary");

  $background-color: $u-drawer-background-color-light-theme;
  $color: $u-body-color-light-theme;

  @if ($dark-theme) {
    $background-color: $u-drawer-background-color-dark-theme;
    $color: $u-body-color-dark-theme;
  }

  .u-drawer-content {
    background-color: $background-color;

    .u-list-item.active {
      &,
      .u-list-item-icon {
        color: $primary-color;
      }

      &:hover::before,
      &::before {
        opacity: .2;
      }

      &:focus::before {
        opacity: .3;
      }
    }
  }
}
