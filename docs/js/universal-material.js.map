{"version":3,"sources":["confirm-dialog.ts","text-field.ts","dialog.ts","progress-dialog.ts","ripple.ts","snackbar.ts"],"names":[],"mappings":"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","file":"universal-material.js","sourcesContent":["const template = `\r\n<div class=\"dialog dialog-progress show\">\r\n  <div class=\"dialog-backdrop\"></div>\r\n  <div class=\"dialog-content\">\r\n    <div class=\"dialog-title\"></div> \r\n    <div class=\"dialog-body\">\r\n      \r\n      <div class=\"dialog-progress-message headline6 text-low-contrast text-nowrap\"></div>\r\n    </div>\r\n  </div>\r\n</div>`;\r\n\r\nexport class ConfirmDialog {\r\n  private static readonly animationEvents = [\"webkitAnimationEnd\", \"oanimationend\", \"msAnimationEnd\", \"animationend\"];\r\n\r\n  private static addAnimationEndEvents(dialog: HTMLElement) {\r\n    ConfirmDialog.animationEvents.forEach(eventName => {\r\n      dialog.addEventListener(eventName, ConfirmDialog.onAnimationEnd.bind(this));\r\n    });\r\n  }\r\n\r\n  private static onAnimationEnd(event: Event) {\r\n    event.currentTarget.removeEventListener(event.type, ConfirmDialog.onAnimationEnd);\r\n    const element = event.currentTarget as HTMLElement;\r\n\r\n    document.body.removeChild(element.parentNode);\r\n  }\r\n\r\n  static open(message: string): {close: () => any} {\r\n    const dialogContainer = document.createElement(\"div\");\r\n    dialogContainer.innerHTML = template;\r\n    dialogContainer.querySelector<HTMLElement>(\".dialog-progress-message\").innerText = message;\r\n    const dialog = dialogContainer.querySelector<HTMLElement>('.dialog');\r\n\r\n    document.body.appendChild(dialogContainer);\r\n\r\n    return {\r\n      close: () => {\r\n        dialog.classList.add('hide');\r\n        dialog.classList.remove('show');\r\n        this.addAnimationEndEvents(dialog);\r\n      }\r\n    }\r\n  }\r\n}\r\n","export class TextField {\r\n\r\n    element: Element;\r\n    input: HTMLInputElement | HTMLTextAreaElement;\r\n\r\n    constructor(element: Element) {\r\n        const input = element.querySelector('input, textarea') as HTMLInputElement | HTMLTextAreaElement;\r\n\r\n        if (input) {\r\n            input.addEventListener('focus', () => {\r\n                element.classList.add('focus');\r\n            });\r\n\r\n            input.addEventListener('blur', () => {\r\n                element.classList.remove('focus');\r\n            });\r\n\r\n            input.addEventListener('input', () => {\r\n                this.setEmpty();\r\n            });\r\n\r\n            element.addEventListener('click', () => {\r\n                input.focus();\r\n            });\r\n\r\n            this.input = input;\r\n            this.element = element;\r\n\r\n            this.setEmpty();\r\n        }\r\n    }\r\n\r\n    setEmpty() {\r\n        if (this.input.value) {\r\n            this.element.classList.remove('empty')\r\n        } else {\r\n            this.element.classList.add('empty')\r\n        }\r\n    }\r\n\r\n    static initializeTextFields(): void {\r\n        const textFields = document.querySelectorAll('.text-field');\r\n        for (let i = 0; i < textFields.length; i++) {\r\n            const textField = textFields[i];\r\n            new TextField(textField);\r\n        }\r\n    }\r\n}\r\n","export class DialogOptions {\r\n  static readonly default: DialogOptions = {\r\n    disposeWhenClose: false\r\n  };\r\n\r\n  disposeWhenClose?: boolean\r\n}\r\n\r\nexport class Dialog {\r\n  private static readonly _animationEvents = [\"webkitAnimationEnd\", \"oanimationend\", \"msAnimationEnd\", \"animationend\"];\r\n  private readonly _dialogOptions: DialogOptions;\r\n\r\n  constructor(private readonly _dialogElement: HTMLElement,\r\n              dialogOptions: DialogOptions) {\r\n    this._dialogOptions = {...DialogOptions.default, ...dialogOptions};\r\n  }\r\n\r\n  private addAnimationEndEvents() {\r\n    Dialog._animationEvents.forEach(eventName => {\r\n      this._dialogElement.addEventListener(eventName, this.onAnimationEnd.bind(this));\r\n    });\r\n  }\r\n\r\n  private onAnimationEnd = (event: Event) => {\r\n    this._dialogElement.removeEventListener(event.type, this.onAnimationEnd);\r\n\r\n    if (this._dialogOptions.disposeWhenClose) {\r\n      document.body.removeChild(this._dialogElement);\r\n    } else {\r\n      this._dialogElement.classList.remove('hide');\r\n    }\r\n  };\r\n\r\n  static attach(element: HTMLElement, dialogOptions?: DialogOptions): Dialog {\r\n    return new Dialog(element, dialogOptions);\r\n  }\r\n\r\n  open() {\r\n    this._dialogElement.classList.add('show');\r\n  }\r\n\r\n  close() {\r\n    this._dialogElement.classList.add('hide');\r\n    this._dialogElement.classList.remove('show');\r\n    this.addAnimationEndEvents();\r\n  }\r\n}\r\n","import {Dialog} from \"./dialog\";\r\n\r\nconst template = `\r\n<div class=\"dialog dialog-progress show\">\r\n  <div class=\"dialog-backdrop\"></div>\r\n  <div class=\"dialog-content\">\r\n    <div class=\"dialog-body\">\r\n      <div class=\"preloader-wrapper\">\r\n        <div class=\"spinner-layer\">\r\n          <div class=\"circle-clipper left\">\r\n            <div class=\"circle\"></div>\r\n          </div>\r\n          <div class=\"gap-patch\">\r\n            <div class=\"circle\"></div>\r\n          </div>\r\n          <div class=\"circle-clipper right\">\r\n            <div class=\"circle\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"dialog-progress-message headline6 text-low-contrast text-nowrap\"></div>\r\n    </div>\r\n  </div>\r\n</div>`;\r\n\r\nexport class ProgressDialog {\r\n  static open(message: string): {close: () => any} {\r\n    const dialogContainer = document.createElement(\"div\");\r\n    dialogContainer.innerHTML = template;\r\n    dialogContainer.querySelector<HTMLElement>(\".dialog-progress-message\").innerText = message;\r\n    const dialog = dialogContainer.querySelector<HTMLElement>('.dialog');\r\n\r\n    document.body.appendChild(dialogContainer);\r\n\r\n    return Dialog.attach(dialog, {\r\n      disposeWhenClose: true\r\n    });\r\n  }\r\n}\r\n","export const RippleContainersSelector =\r\n  [\r\n    '.btn',\r\n    '.btn-flat',\r\n    '.btn-borderless',\r\n    '.btn-solid',\r\n    '.btn-raised',\r\n    '.btn-outline',\r\n    '.list-hover .list-item',\r\n    '.list-item .list-item-hover',\r\n    '.tab',\r\n    '.dropdown-item',\r\n    '.radio .selection-control',\r\n    '.checkbox .selection-control',\r\n    '.switch .check-indicator',\r\n    '.chip-remove',\r\n    '.chip-hover'\r\n  ].join(',');\r\n\r\nexport class Ripple {\r\n  disabled = false;\r\n\r\n  constructor(element: HTMLElement) {\r\n    if (window.getComputedStyle(element).position !== \"absolute\" && window.getComputedStyle(element).position !== \"fixed\") {\r\n      element.style.position = \"relative\";\r\n    }\r\n\r\n    let isTouching = false;\r\n\r\n    element.addEventListener('mousedown', (e: MouseEvent) => {\r\n      if (!isTouching) {\r\n        this.createRipple(element, 'mouseup', null, e.clientX, e.clientY);\r\n      }\r\n    });\r\n\r\n    element.addEventListener('touchstart', (e: TouchEvent) => {\r\n      isTouching = true;\r\n      this.createRipple(element, 'touchend', () => {\r\n        setTimeout(() => {\r\n          isTouching = false;\r\n        }, 100);\r\n      }, e.touches[0].clientX, e.touches[0].clientY);\r\n    });\r\n  }\r\n\r\n  createRipple(rippleContainer: Element, releaseEventName: string, releaseCallback: Function, pageX: number, pageY: number) {\r\n    if (this.disabled) return;\r\n\r\n    const rippleWrapper = document.createElement('DIV');\r\n    rippleWrapper.classList.add('ripple-wrapper');\r\n\r\n    const ripple = document.createElement('DIV');\r\n    ripple.classList.add('ripple');\r\n    rippleWrapper.appendChild(ripple);\r\n    rippleContainer.insertAdjacentElement('afterbegin', rippleWrapper);\r\n\r\n    const release = function () {\r\n      ripple.classList.add('dismiss');\r\n\r\n      if (releaseCallback) {\r\n        releaseCallback();\r\n      }\r\n    };\r\n\r\n    window.addEventListener(releaseEventName, release);\r\n    rippleContainer.addEventListener(\"dragover\", release);\r\n\r\n    ripple.addEventListener('transitionend', () => {\r\n      if (ripple.classList.contains('dismiss')) {\r\n        rippleContainer.removeChild(rippleWrapper);\r\n        rippleContainer.removeEventListener(\"dragover\", release);\r\n        window.removeEventListener(releaseEventName, release)\r\n      }\r\n    });\r\n\r\n    requestAnimationFrame(() => {\r\n      const clientRect = rippleContainer.getBoundingClientRect();\r\n      const largestDimensionSize = Math.max(rippleWrapper.clientWidth, rippleWrapper.clientHeight);\r\n      let rippleSize = largestDimensionSize * 2;\r\n      ripple.style.width = rippleSize + 'px';\r\n      ripple.style.height = rippleSize + 'px';\r\n      ripple.style.marginLeft = -rippleSize / 2 + 'px';\r\n      ripple.style.marginTop = -rippleSize / 2 + 'px';\r\n      ripple.style.transitionDuration = (1080 * Math.pow(rippleSize, 0.3)) + 'ms, 750ms';\r\n\r\n      const x = (pageX - clientRect.left) + ((rippleSize - rippleContainer.clientWidth) / 2);\r\n      const y = (pageY - clientRect.top) + ((rippleSize - rippleContainer.clientHeight) / 2);\r\n\r\n      ripple.style.transformOrigin = x + \"px \" + y + \"px\";\r\n      ripple.classList.add('show');\r\n    });\r\n  }\r\n\r\n  static initializeRipples(): void {\r\n    const rippleContainers = document.querySelectorAll(RippleContainersSelector);\r\n\r\n    for (let i = 0; i < rippleContainers.length; i++) {\r\n      new Ripple(rippleContainers[i] as HTMLElement);\r\n\r\n    }\r\n  }\r\n}\r\n","\r\n\r\nexport class Snackbar {\r\n  private static readonly _animationEvents = [\"webkitAnimationEnd\", \"oanimationend\", \"msAnimationEnd\", \"animationend\"];\r\n  private static _snackbarQueue: SnackbarDefinition[] = [];\r\n  private static _consuming: boolean;\r\n\r\n  static show(text: string, duration: SnackbarDuration = SnackbarDuration.long, buttonDefinition?: SnackbarButtonDefinition) {\r\n    Snackbar._snackbarQueue.push({\r\n      text: text,\r\n      duration: duration,\r\n      buttonDefinition: buttonDefinition\r\n    });\r\n\r\n    if (!Snackbar._consuming) {\r\n      Snackbar.consumeQueue();\r\n    }\r\n  }\r\n\r\n  private static consumeQueue() {\r\n\r\n    if (Snackbar._snackbarQueue.length) {\r\n      Snackbar._consuming = true;\r\n      Snackbar.showNext();\r\n    }\r\n  }\r\n\r\n  private static showNext() {\r\n    if (Snackbar._snackbarQueue.length) {\r\n      const snackbarDefinition = Snackbar._snackbarQueue[0];\r\n\r\n      Snackbar._snackbarQueue = Snackbar._snackbarQueue.slice(1);\r\n\r\n      const snackbar = Snackbar.createSnackbar();\r\n\r\n      snackbar.appendChild(Snackbar.createSnackbarText(snackbarDefinition.text));\r\n\r\n      if (snackbarDefinition.buttonDefinition) {\r\n        const snackbarButton = Snackbar.createButton(snackbarDefinition.buttonDefinition);\r\n        snackbar.appendChild(snackbarButton);\r\n      }\r\n\r\n      document.body.appendChild(snackbar);\r\n\r\n      setTimeout(() => {\r\n        snackbar.classList.add(\"dismiss\");\r\n        Snackbar.addAnimationEndEvents(snackbar);\r\n\r\n      }, snackbarDefinition.duration);\r\n    } else {\r\n      Snackbar._consuming = false;\r\n    }\r\n  }\r\n\r\n  private static createSnackbar(): HTMLElement {\r\n    const snackbar = document.createElement(\"div\");\r\n    snackbar.className = \"snackbar\";\r\n\r\n    return snackbar;\r\n  }\r\n\r\n  private static createSnackbarText(text: string): HTMLElement {\r\n    const snackbarText = document.createElement(\"div\");\r\n    snackbarText.innerText = text;\r\n    snackbarText.className = \"snackbar-text\";\r\n\r\n    return snackbarText;\r\n  }\r\n\r\n  private static createButton(buttonDefinition: SnackbarButtonDefinition): HTMLElement {\r\n\r\n    const snackbarButton = document.createElement(\"button\") as HTMLButtonElement;\r\n    snackbarButton.type = \"button\";\r\n    snackbarButton.className = \"btn-flat btn-secondary\";\r\n    snackbarButton.innerText = buttonDefinition.text;\r\n\r\n    new Ripple(snackbarButton);\r\n\r\n    if (buttonDefinition.action) {\r\n      snackbarButton.addEventListener(\"click\", buttonDefinition.action);\r\n    }\r\n\r\n    return snackbarButton;\r\n  }\r\n\r\n  private static addAnimationEndEvents(snackbar: HTMLElement) {\r\n    Snackbar._animationEvents.forEach(eventName => {\r\n      snackbar.addEventListener(eventName, Snackbar.onAnimationEnd.bind(this));\r\n    });\r\n  }\r\n\r\n  private static onAnimationEnd(event: Event) {\r\n    event.currentTarget.removeEventListener(event.type, Snackbar.onAnimationEnd);\r\n    const element = event.currentTarget as HTMLElement;\r\n\r\n    element.parentNode.removeChild(element);\r\n    Snackbar.showNext();\r\n  }\r\n}\r\n\r\nexport enum SnackbarDuration {\r\n  short = 2500,\r\n  long = 5000\r\n}\r\n\r\nexport class SnackbarDefinition {\r\n  text: string;\r\n  duration: SnackbarDuration;\r\n  buttonDefinition: SnackbarButtonDefinition;\r\n}\r\n\r\nexport class SnackbarButtonDefinition {\r\n  text: string;\r\n  action: EventListener;\r\n}\r\n"]}